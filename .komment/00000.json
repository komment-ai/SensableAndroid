[
  {
    "name": "ExpandableListAdapter.java",
    "path": "client/src/main/java/io/sensable/client/adapter/ExpandableListAdapter.java",
    "content": {
      "structured": {
        "description": "An expandable list adapter class that extends BaseExpandableListAdapter, providing functionality for displaying data in an expandable list format. The adapter takes a context, a list of header titles, and a map of child data as inputs. It allows users to retrieve and manipulate the child elements within each group in a hierarchical manner.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_1 {\n        label=\"android\"\n        color=\"#33363A\"\n        BaseExpandableListAdapter [label=\"android.widget.BaseExpandableListAdapter\", style=\"rounded,filled\"]\n        LayoutInflater [label=\"android.view.LayoutInflater\", style=\"rounded,filled\"]\n        Context [label=\"android.content.Context\", style=\"rounded,filled\"]\n        ViewGroup [label=\"android.view.ViewGroup\", style=\"rounded,filled\"]\n        View [label=\"android.view.View\", style=\"rounded,filled\"]\n        Typeface [label=\"android.graphics.Typeface\", style=\"rounded,filled\"]\n        TextView [label=\"android.widget.TextView\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_3 {\n        label=\"io/sensable\"\n        color=\"#33363A\"\n        R [label=\"io.sensable.client.R\", style=\"rounded,filled\"]\n        SensableActivity []\n        subgraph cluster_4 {\n            label=\"client\"\n            color=\"#33363A\"\n            subgraph cluster_main {\n                // style=filled\n                color=\"#00000000\"\n                ExpandableListAdapter [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n                label = \"\"\n            }\n        }\n    }\n    subgraph cluster_5 {\n        label=\"java\"\n        color=\"#33363A\"\n        List [label=\"java.util.List\", style=\"rounded,filled\"]\n        HashMap [label=\"java.util.HashMap\", style=\"rounded,filled\"]\n    }\n    ExpandableListAdapter -> View [dir=\"both\", penwidth=4]\n    ExpandableListAdapter -> Context [style=\"dashed\"]\n    ExpandableListAdapter -> HashMap [style=\"dashed\"]\n    ExpandableListAdapter -> List [style=\"dashed\"]\n    Context -> ExpandableListAdapter [penwidth=1]\n    SensableActivity -> ExpandableListAdapter [style=\"dashed\"]\n    ExpandableListAdapter -> Typeface [style=\"dashed\"]\n    ViewGroup -> ExpandableListAdapter [penwidth=2]\n    ExpandableListAdapter -> View [style=\"dashed\"]\n    ExpandableListAdapter -> ViewGroup [style=\"dashed\"]\n    ExpandableListAdapter -> LayoutInflater [style=\"dashed\"]\n    ExpandableListAdapter -> TextView [style=\"dashed\"]\n    ExpandableListAdapter -> BaseExpandableListAdapter [style=\"dashed\"]\n    ExpandableListAdapter -> R [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 2139 1696\"><svg id=\"d2-svg\" class=\"d2-3344683269\" width=\"2139\" height=\"1696\" viewBox=\"11 11 2139 1696\"><rect x=\"11.000000\" y=\"11.000000\" width=\"2139.000000\" height=\"1696.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-3344683269 .text {\n\tfont-family: \"d2-3344683269-font-regular\";\n}\n@font-face {\n\tfont-family: d2-3344683269-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3344683269 .text-italic {\n\tfont-family: \"d2-3344683269-font-italic\";\n}\n@font-face {\n\tfont-family: d2-3344683269-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3344683269 .text-mono {\n\tfont-family: \"d2-3344683269-font-mono\";\n}\n@font-face {\n\tfont-family: d2-3344683269-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3344683269 .text-mono-bold {\n\tfont-family: \"d2-3344683269-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-3344683269-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-3344683269 .fill-N1{fill:#ECEDED;}\n\t\t.d2-3344683269 .fill-N2{fill:#676C7E;}\n\t\t.d2-3344683269 .fill-N3{fill:#9499AB;}\n\t\t.d2-3344683269 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-3344683269 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-3344683269 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-3344683269 .fill-N7{fill:#151719;}\n\t\t.d2-3344683269 .fill-B1{fill:#717D86;}\n\t\t.d2-3344683269 .fill-B2{fill:#717D86;}\n\t\t.d2-3344683269 .fill-B3{fill:#ffff00;}\n\t\t.d2-3344683269 .fill-B4{fill:#151719;}\n\t\t.d2-3344683269 .fill-B5{fill:#151719;}\n\t\t.d2-3344683269 .fill-B6{fill:#151719;}\n\t\t.d2-3344683269 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-3344683269 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-3344683269 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-3344683269 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-3344683269 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-3344683269 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-3344683269 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-3344683269 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-3344683269 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-3344683269 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-3344683269 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-3344683269 .stroke-N7{stroke:#151719;}\n\t\t.d2-3344683269 .stroke-B1{stroke:#717D86;}\n\t\t.d2-3344683269 .stroke-B2{stroke:#717D86;}\n\t\t.d2-3344683269 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-3344683269 .stroke-B4{stroke:#151719;}\n\t\t.d2-3344683269 .stroke-B5{stroke:#151719;}\n\t\t.d2-3344683269 .stroke-B6{stroke:#151719;}\n\t\t.d2-3344683269 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-3344683269 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-3344683269 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-3344683269 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-3344683269 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-3344683269 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-3344683269 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-3344683269 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-3344683269 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-3344683269 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-3344683269 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-3344683269 .background-color-N7{background-color:#151719;}\n\t\t.d2-3344683269 .background-color-B1{background-color:#717D86;}\n\t\t.d2-3344683269 .background-color-B2{background-color:#717D86;}\n\t\t.d2-3344683269 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-3344683269 .background-color-B4{background-color:#151719;}\n\t\t.d2-3344683269 .background-color-B5{background-color:#151719;}\n\t\t.d2-3344683269 .background-color-B6{background-color:#151719;}\n\t\t.d2-3344683269 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-3344683269 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-3344683269 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-3344683269 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-3344683269 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-3344683269 .color-N1{color:#ECEDED;}\n\t\t.d2-3344683269 .color-N2{color:#676C7E;}\n\t\t.d2-3344683269 .color-N3{color:#9499AB;}\n\t\t.d2-3344683269 .color-N4{color:#CFD2DD;}\n\t\t.d2-3344683269 .color-N5{color:#DEE1EB;}\n\t\t.d2-3344683269 .color-N6{color:#EEF1F8;}\n\t\t.d2-3344683269 .color-N7{color:#151719;}\n\t\t.d2-3344683269 .color-B1{color:#717D86;}\n\t\t.d2-3344683269 .color-B2{color:#717D86;}\n\t\t.d2-3344683269 .color-B3{color:#ffff00;}\n\t\t.d2-3344683269 .color-B4{color:#151719;}\n\t\t.d2-3344683269 .color-B5{color:#151719;}\n\t\t.d2-3344683269 .color-B6{color:#151719;}\n\t\t.d2-3344683269 .color-AA2{color:#ECEDED;}\n\t\t.d2-3344683269 .color-AA4{color:#CFD2DD;}\n\t\t.d2-3344683269 .color-AA5{color:#DEE1EB;}\n\t\t.d2-3344683269 .color-AB4{color:#CFD2DD;}\n\t\t.d2-3344683269 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"1024.000000\" y=\"107.000000\" width=\"840.000000\" height=\"838.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1444.000000\" y=\"140.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"62.000000\" y=\"1335.000000\" width=\"1654.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"889.000000\" y=\"1368.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"1736.000000\" y=\"1335.000000\" width=\"413.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1942.500000\" y=\"1368.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"1074.000000\" y=\"162.000000\" width=\"740.000000\" height=\"728.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1444.000000\" y=\"191.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.content\"><g class=\"shape\" ><rect x=\"112.000000\" y=\"1390.000000\" width=\"212.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"218.000000\" y=\"1419.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">content</text></g><g id=\"android.graphics\"><g class=\"shape\" ><rect x=\"344.000000\" y=\"1390.000000\" width=\"222.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"455.000000\" y=\"1419.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">graphics</text></g><g id=\"android.view\"><g class=\"shape\" ><rect x=\"586.000000\" y=\"1390.000000\" width=\"533.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"852.500000\" y=\"1419.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">view</text></g><g id=\"android.widget\"><g class=\"shape\" ><rect x=\"1139.000000\" y=\"1390.000000\" width=\"527.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1402.500000\" y=\"1419.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">widget</text></g><g id=\"java.util\"><g class=\"shape\" ><rect x=\"1786.000000\" y=\"1390.000000\" width=\"313.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1942.500000\" y=\"1419.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"1124.000000\" y=\"217.000000\" width=\"640.000000\" height=\"618.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1444.000000\" y=\"242.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.content.Context\"><g class=\"shape\" ><rect x=\"162.000000\" y=\"1440.000000\" width=\"112.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"218.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Context</text></g><g id=\"android.graphics.Typeface\"><g class=\"shape\" ><rect x=\"394.000000\" y=\"1440.000000\" width=\"122.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"455.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Typeface</text></g><g id=\"android.view.LayoutInflater\"><g class=\"shape\" ><rect x=\"636.000000\" y=\"1440.000000\" width=\"178.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"725.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">LayoutInflater</text></g><g id=\"android.view.View\"><g class=\"shape\" ><rect x=\"834.000000\" y=\"1440.000000\" width=\"84.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"876.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">View</text></g><g id=\"android.view.ViewGroup\"><g class=\"shape\" ><rect x=\"938.000000\" y=\"1440.000000\" width=\"131.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1003.500000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ViewGroup</text></g><g id=\"android.widget.BaseExpandableListAdapter\"><g class=\"shape\" ><rect x=\"1189.000000\" y=\"1440.000000\" width=\"284.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1331.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">BaseExpandableListAdapter</text></g><g id=\"android.widget.TextView\"><g class=\"shape\" ><rect x=\"1493.000000\" y=\"1440.000000\" width=\"123.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1554.500000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">TextView</text></g><g id=\"java.util.HashMap\"><g class=\"shape\" ><rect x=\"1836.000000\" y=\"1440.000000\" width=\"111.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1891.500000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HashMap</text></g><g id=\"java.util.List\"><g class=\"shape\" ><rect x=\"1967.000000\" y=\"1440.000000\" width=\"82.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2008.000000\" y=\"1478.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">List</text></g><g id=\"io.sensable.client.SensableActivity\"><g class=\"shape\" ><rect x=\"1205.000000\" y=\"267.000000\" width=\"199.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1304.500000\" y=\"305.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SensableActivity</text></g><g id=\"io.sensable.client.adapter\"><g class=\"shape\" ><rect x=\"1174.000000\" y=\"418.000000\" width=\"540.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"1444.000000\" y=\"439.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">adapter</text></g><g id=\"io.sensable.client.R\"><g class=\"shape\" ><rect x=\"1302.000000\" y=\"719.000000\" width=\"54.000000\" height=\"66.000000\" rx=\"27.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1329.000000\" y=\"757.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">R</text></g><g id=\"io.sensable.client.adapter.ExpandableListAdapter\"><g class=\"shape\" ><rect x=\"1224.000000\" y=\"468.000000\" width=\"440.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1444.000000\" y=\"506.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">ExpandableListAdapter</text></g><g id=\"io.sensable.client.(SensableActivity -&gt; adapter.ExpandableListAdapter)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 1334.500000 334.000000 L 1334.500000 465.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1369.000000\" y=\"458.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.content.Context)[0]\"><path d=\"M 1243.166016 535.000000 L 1243.166016 980.000000 S 1243.166016 990.000000 1233.166016 990.000000 L 228.000000 990.000000 S 218.000000 990.000000 218.000000 1000.000000 L 218.000000 1437.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"252.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.graphics.Typeface)[0]\"><path d=\"M 1297.833008 535.000000 L 1297.833008 669.000000 S 1297.833008 679.000000 1287.833008 679.000000 L 1271.833008 679.000000 S 1261.833008 679.000000 1261.833008 689.000000 L 1261.833008 1030.000000 S 1261.833008 1040.000000 1251.833008 1040.000000 L 465.000000 1040.000000 S 455.000000 1040.000000 455.000000 1050.000000 L 455.000000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"489.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.view.LayoutInflater)[0]\"><path d=\"M 1371.166016 535.000000 L 1371.166016 669.000000 S 1371.166016 679.000000 1381.166016 679.000000 L 1386.833008 679.000000 S 1396.833008 679.000000 1396.833008 689.000000 L 1396.833008 1080.000000 S 1396.833008 1090.000000 1386.833008 1090.000000 L 735.000000 1090.000000 S 725.000000 1090.000000 725.000000 1100.000000 L 725.000000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"759.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.view.View)[0]\"><path d=\"M 1420.666016 535.000000 L 1420.666016 1130.000000 S 1420.666016 1140.000000 1410.666016 1140.000000 L 872.000000 1140.000000 S 862.000000 1140.000000 862.000000 1150.000000 L 862.000000 1437.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"896.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.view.ViewGroup)[0]\"><path d=\"M 1481.166016 535.000000 L 1481.166016 1230.000000 S 1481.166016 1240.000000 1471.166016 1240.000000 L 1013.500000 1240.000000 S 1003.500000 1240.000000 1003.500000 1250.000000 L 1003.500000 1437.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1038.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.widget.BaseExpandableListAdapter)[0]\"><path d=\"M 1517.833008 535.000000 L 1517.833008 1280.000000 S 1517.833008 1290.000000 1507.833008 1290.000000 L 1341.000000 1290.000000 S 1331.000000 1290.000000 1331.000000 1300.000000 L 1331.000000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1365.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; android.widget.TextView)[0]\"><path d=\"M 1554.500000 535.000000 L 1554.500000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1589.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(adapter.ExpandableListAdapter -&gt; R)[0]\"><path d=\"M 1329.833008 535.000000 L 1329.833008 715.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1364.000000\" y=\"709.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; java.util.HashMap)[0]\"><path d=\"M 1591.166016 535.000000 L 1591.166016 1030.000000 S 1591.166016 1040.000000 1601.166016 1040.000000 L 1881.500000 1040.000000 S 1891.500000 1040.000000 1891.500000 1050.000000 L 1891.500000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"1926.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter -&gt; java.util.List)[0]\"><path d=\"M 1627.833008 535.000000 L 1627.833008 980.000000 S 1627.833008 990.000000 1637.833008 990.000000 L 1998.000000 990.000000 S 2008.000000 990.000000 2008.000000 1000.000000 L 2008.000000 1436.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /><text x=\"2042.000000\" y=\"1430.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(android.content.Context -&gt; io.sensable.client.adapter.ExpandableListAdapter)[0]\"><path d=\"M 218.000000 1507.000000 L 218.000000 1646.000000 S 218.000000 1656.000000 208.000000 1656.000000 L 32.000000 1656.000000 S 22.000000 1656.000000 22.000000 1646.000000 L 22.000000 72.000000 S 22.000000 62.000000 32.000000 62.000000 L 1434.500000 62.000000 S 1444.500000 62.000000 1444.500000 72.000000 L 1444.500000 465.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /></g><g id=\"(android.view.ViewGroup -&gt; io.sensable.client.adapter.ExpandableListAdapter)[0]\"><path d=\"M 1003.500000 1507.000000 L 1003.500000 1696.000000 S 1003.500000 1706.000000 993.500000 1706.000000 L 22.000000 1706.000000 S 12.000000 1706.000000 12.000000 1696.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 1544.500000 12.000000 S 1554.500000 12.000000 1554.500000 22.000000 L 1554.500000 465.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /></g><g id=\"(io.sensable.client.adapter.ExpandableListAdapter &lt;-&gt; android.view.View)[0]\"><marker id=\"mk-3695359059\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"3.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"10.000000,0.000000 0.000000,6.000000 10.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 1444.500000 537.000000 L 1444.500000 1180.000000 S 1444.500000 1190.000000 1434.500000 1190.000000 L 900.000000 1190.000000 S 890.000000 1190.000000 890.000000 1200.000000 L 890.000000 1437.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-start=\"url(#mk-3695359059)\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3344683269)\" /></g><mask id=\"d2-3344683269\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"2139\" height=\"1696\">\n<rect x=\"11\" y=\"11\" width=\"2139\" height=\"1696\" fill=\"white\"></rect>\n<rect x=\"1434.000000\" y=\"112.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"844.000000\" y=\"1340.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1917.500000\" y=\"1340.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1400.000000\" y=\"167.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"179.000000\" y=\"1395.000000\" width=\"78\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"412.500000\" y=\"1395.000000\" width=\"85\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"829.000000\" y=\"1395.000000\" width=\"47\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1368.000000\" y=\"1395.000000\" width=\"69\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1926.000000\" y=\"1395.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1420.500000\" y=\"222.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"184.500000\" y=\"1462.500000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"416.500000\" y=\"1462.500000\" width=\"77\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"658.500000\" y=\"1462.500000\" width=\"133\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"856.500000\" y=\"1462.500000\" width=\"39\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"960.500000\" y=\"1462.500000\" width=\"86\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1211.500000\" y=\"1462.500000\" width=\"239\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1515.500000\" y=\"1462.500000\" width=\"78\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1858.500000\" y=\"1462.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1989.500000\" y=\"1462.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1227.500000\" y=\"289.500000\" width=\"154\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1417.000000\" y=\"423.000000\" width=\"54\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1324.500000\" y=\"741.500000\" width=\"9\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1344.000000\" y=\"490.500000\" width=\"200\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.SensableActivity -> io.sensable.client.adapter.ExpandableListAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.content.Context: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.graphics.Typeface: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.view.LayoutInflater: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.view.View: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.view.ViewGroup: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.widget.BaseExpandableListAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> android.widget.TextView: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> io.sensable.client.R: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> java.util.HashMap: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter -> java.util.List: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.content.Context -> io.sensable.client.adapter.ExpandableListAdapter: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.view.ViewGroup -> io.sensable.client.adapter.ExpandableListAdapter: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter <-> android.view.View: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.view.View: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.view.ViewGroup: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.R: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.view.LayoutInflater: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.graphics.Typeface: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.List: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.HashMap: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.widget.TextView: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.widget.BaseExpandableListAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.SensableActivity: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.view.ViewGroup: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.view.View: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.adapter.ExpandableListAdapter: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "844a070d-d95f-179a-964b-35e576049bf1",
            "ancestors": [],
            "description": "Is designed to manage expandable lists in Android applications. It extends BaseExpandableListAdapter and provides functionality for displaying data in an expandable list format. The class retrieves child objects based on group positions, calculates the number of children per group, and inflates views for each item in the list.",
            "name": "ExpandableListAdapter",
            "location": {
              "start": 22,
              "insert": 15,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 14,
                "end": 21
              }
            },
            "item_type": "class",
            "length": 286,
            "docLength": 7
          },
          {
            "id": "77525d54-52c6-3981-3b47-ee044472fbc0",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns an object at a specified position within a sublist associated with a group in a hierarchical list structure. The group is identified by its index, and the child position is determined relative to the sublist.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group or category for which to retrieve child elements, as specified by the `_listDataHeader` map.",
                "complex_type": false
              },
              {
                "name": "childPosititon",
                "type_name": "int",
                "description": "0-based index of the child item to retrieve within the list of child items associated with the specified `groupPosition`.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "Object",
              "description": "an object from a list of child data.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "int groupPosition = 0;\nint childPosititon = 1;\n\nObject child = (Object) getChild(groupPosition, childPosititon);\n",
              "description": ""
            },
            "name": "getChild",
            "location": {
              "start": 66,
              "insert": 36,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 35,
                "end": 65
              }
            },
            "item_type": "method",
            "length": 5,
            "docLength": 30
          },
          {
            "id": "5f66d328-c16d-dca6-be4f-f8f305eb4113",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns a unique identifier for each child element at a given position within a group. The returned ID is based on the child's relative position within the group, with the first child receiving an ID of 0 and subsequent children incrementing accordingly.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group or parent element for which the `getChildId` method is called to retrieve the identifier of its child at the specified `childPosition`.",
                "complex_type": false
              },
              {
                "name": "childPosition",
                "type_name": "int",
                "description": "0-based index of the child element being accessed within a group, and its value is returned as the unique identifier for that child.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "long",
              "description": "a unique long integer representing each child position.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "long childId = listAdapter.getChildId(0, 1);\n",
              "description": ""
            },
            "name": "getChildId",
            "location": {
              "start": 84,
              "insert": 72,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 71,
                "end": 83
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 12
          },
          {
            "id": "286010e8-cac8-b488-f84a-d70201f3566a",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Inflates a layout for a child view within a group, retrieves the child's text content, and sets it to a TextView widget. It returns the converted view with the set text.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based position of the group in the list that contains the child view being inflated, which is used to retrieve the child text from the data source.",
                "complex_type": false
              },
              {
                "name": "childPosition",
                "type_name": "int",
                "description": "0-based index of the child view within its parent group, used to retrieve the corresponding child text and set it in the TextView.",
                "complex_type": false
              },
              {
                "name": "isLastChild",
                "type_name": "boolean",
                "description": "state of whether the child view being accessed is the last one within its group, which can potentially be used to optimize rendering or styling of the child views accordingly.",
                "complex_type": false
              },
              {
                "name": "convertView",
                "type_name": "View",
                "description": "view to be recycled and reused, or null if a new view must be created.\n\nInflates to null initially and then inflated with layout R.layout.list_item when not null.",
                "complex_type": true
              },
              {
                "name": "parent",
                "type_name": "ViewGroup",
                "description": "ViewGroup that this view is being added to, serving as a reference for layout and alignment purposes.\n\nParent is a ViewGroup object representing the parent view group. It has no attributes mentioned in this context.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "View",
              "description": "a custom list item view with child text.\n\nThe output is a view representing a child in an expandable list view group. It has a text value set from the `childText` string and is inflated with the layout resource `R.layout.list_item`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "int groupPosition = 0;\nint childPosition = 0;\nboolean isLastChild = false;\nView convertView = null;\nViewGroup parent = null;\n\nView result = getChildView(groupPosition, childPosition, isLastChild, convertView, parent);\n",
              "description": ""
            },
            "name": "getChildView",
            "location": {
              "start": 141,
              "insert": 89,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 88,
                "end": 140
              }
            },
            "item_type": "method",
            "length": 17,
            "docLength": 52
          },
          {
            "id": "94ec0a6d-feae-0787-ba4a-4340b008bc9a",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns the number of child elements for a given group position within a list data structure, utilizing a header to index into the child list and retrieve its size.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of a group in the list data header, used to retrieve the corresponding child data from the `_listDataChild` map.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "integer",
              "description": "an integer representing the size of a list.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "int childrenCount = expandableListAdapter.getChildrenCount(0);\n",
              "description": ""
            },
            "name": "getChildrenCount",
            "location": {
              "start": 170,
              "insert": 159,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 158,
                "end": 169
              }
            },
            "item_type": "method",
            "length": 5,
            "docLength": 11
          },
          {
            "id": "67442b51-8480-b7b2-4b47-d0b7f247818a",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns an object at a specified position from a list data header. The position is provided as an integer parameter, and the function retrieves the corresponding object from the `_listDataHeader` collection.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group to be retrieved from the `_listDataHeader` collection, allowing for specific groups to be accessed and returned.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "Object",
              "description": "an object retrieved from the `_listDataHeader` list.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "public Object groupData = new ArrayList<>();\nList<String> listDataHeader = new ArrayList<>();\n\n// Assuming listDataHeader contains data for header titles and \n// groupData contains data for child elements.\nExpandableListAdapter adapter = new ExpandableListAdapter(context, listDataHeader, groupData);\nObject group = adapter.getGroup(0); // Returns the object at position 0 in _listDataHeader.",
              "description": ""
            },
            "name": "getGroup",
            "location": {
              "start": 193,
              "insert": 176,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 175,
                "end": 192
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 17
          },
          {
            "id": "ca93ebd6-1609-dda5-0749-acbee953c20d",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns an integer representing the number of items in a list referred to as `_listDataHeader`. This count is used for grouping or categorizing data in a hierarchical manner. The function overrides the default implementation and provides custom behavior for getting group counts.",
            "params": [],
            "returns": {
              "type_name": "integer",
              "description": "an integer representing the size of a list.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "List<String> listDataHeader = new ArrayList<>();\nlistDataHeader.add(\"Header1\");\nlistDataHeader.add(\"Header2\");\nlistDataHeader.add(\"Header3\");\n\nHashMap<String, List<String>> listDataChild = new HashMap<>();\n// Initialize child data\n\nExpandableListAdapter adapter = new ExpandableListAdapter(context, listDataHeader, listDataChild);\nListView listView = (ListView) findViewById(R.id.listView);\n\nadapter.setGroupCount(listDataHeader.size()); // Using getGroupCount method\nlistView.setAdapter(adapter);\n",
              "description": ""
            },
            "name": "getGroupCount",
            "location": {
              "start": 204,
              "insert": 198,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 197,
                "end": 203
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 6
          },
          {
            "id": "198ab765-8ad3-80a2-4642-ee38088ad033",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns a long integer value that corresponds to the specified group position. The group position is provided as an input parameter and is directly returned without any modification or processing. This suggests a simple mapping between group positions and their corresponding IDs.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group for which to retrieve the corresponding ID, which is directly returned as the result.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "long",
              "description": "the integer value of the input `groupPosition`.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "ExpandableListAdapter expandableListAdapter = new ExpandableListAdapter(getBaseContext(), listDataHeader, listChildData);\nlong groupId = expandableListAdapter.getGroupId(0); // Example usage with input groupPosition=0.",
              "description": ""
            },
            "name": "getGroupId",
            "location": {
              "start": 217,
              "insert": 209,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 208,
                "end": 216
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 8
          },
          {
            "id": "f2a0acc7-5040-1e9c-f641-4058f03a3a4c",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns a view representing a group in a list. It inflates a layout for each group if necessary, sets the text of a header label to the group's title, and returns the converted view. The returned view is used to display the group's title in the list.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group being rendered, used to retrieve its title and configure the view accordingly.",
                "complex_type": false
              },
              {
                "name": "isExpanded",
                "type_name": "boolean",
                "description": "state of the group at the given position, indicating whether it is currently expanded or not.",
                "complex_type": false
              },
              {
                "name": "convertView",
                "type_name": "View",
                "description": "view that will be used to represent the group at the specified `groupPosition`, and it is reused whenever possible for efficiency.\n\nconvertView is either null or an inflated View object from R.layout.list_group; if convertView is null, it is initialized with the layout inflater; otherwise, its original state remains unchanged.",
                "complex_type": true
              },
              {
                "name": "parent",
                "type_name": "ViewGroup",
                "description": "parent view group that the converted view is being added to or replaced within.\n\nParent is a ViewGroup object representing the parent group to be laid out and shown. It has main properties such as layout_width, layout_height, and layout_margin.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "androidviewView",
              "description": "a customized group view for an expandable list.\n\nIt is a View object, specifically a layout view with an inflated design from R.layout.list_group. The view contains a TextView with the ID lblListHeader, which displays the header title in bold font.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "getGroupView(0, true, null, parent); \n",
              "description": ""
            },
            "name": "getGroupView",
            "location": {
              "start": 263,
              "insert": 222,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 221,
                "end": 262
              }
            },
            "item_type": "method",
            "length": 17,
            "docLength": 41
          },
          {
            "id": "7292e5b1-06dc-9682-6048-0ff4aebbfb5f",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns a boolean value indicating whether the IDs returned by the adapter are stable across different configuration changes or not. In this implementation, it always returns `false`, implying that the IDs may change due to configuration changes.",
            "params": [],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating that IDs are not stable.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "ExpandableListAdapter expandableListAdapter = new ExpandableListAdapter(this, listHeaderData, listChildData);\nexpandableListAdapter.hasStableIds(); // Returns false",
              "description": ""
            },
            "name": "hasStableIds",
            "location": {
              "start": 286,
              "insert": 281,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 280,
                "end": 285
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 5
          },
          {
            "id": "63fb27d2-dfca-41bd-fe4a-113476a122bb",
            "ancestors": [
              "844a070d-d95f-179a-964b-35e576049bf1"
            ],
            "description": "Returns a boolean value indicating whether the child at the specified position within the group at the specified position can be selected or not. In this implementation, it always returns `true`, allowing any child to be selected.",
            "params": [
              {
                "name": "groupPosition",
                "type_name": "int",
                "description": "0-based index of the group within an ExpandableListView that is being checked for selectability of its child at the specified `childPosition`.",
                "complex_type": false
              },
              {
                "name": "childPosition",
                "type_name": "int",
                "description": "0-based position of a child item within its parent group in a hierarchical data structure.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether children are selectable.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "ExpandableListAdapter adapter = new ExpandableListAdapter(this, listDataHeader, \n                                                     listDataChild);\nListView listView = findViewById(R.id.list);\nlistView.setAdapter(adapter);\n\nadapter.isChildSelectable(0, 1);",
              "description": ""
            },
            "name": "isChildSelectable",
            "location": {
              "start": 303,
              "insert": 291,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 290,
                "end": 302
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 12
          }
        ]
      }
    }
  },
  {
    "name": "FontFitTextView.java",
    "path": "client/src/main/java/io/sensable/client/component/FontFitTextView.java",
    "content": {
      "structured": {
        "description": "An Android custom `TextView` class named `FontFitTextView`. It automatically adjusts the font size to fit the text within a specified width. The `TextView` uses the `onMeasure`, `onTextChanged`, and `onSizeChanged` methods to resize the font based on the available width. The `refitText` method is used to calculate the optimal font size by iterating over possible sizes until it finds one that fits the specified width.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_2 {\n        label=\"sensable/client\"\n        color=\"#33363A\"\n        subgraph cluster_main {\n            // style=filled\n            color=\"#00000000\"\n            FontFitTextView [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n            label = \"\"\n        }\n    }\n    TextView [label=\"android.widget.TextView\", style=\"rounded,filled\"]\n    Context [label=\"android.content.Context\", style=\"rounded,filled\"]\n    AttributeSet [label=\"android.util.AttributeSet\", style=\"rounded,filled\"]\n    TypedValue [label=\"android.util.TypedValue\", style=\"rounded,filled\"]\n    Paint [label=\"android.graphics.Paint\", style=\"rounded,filled\"]\n    FontFitTextView -> AttributeSet [style=\"dashed\"]\n    FontFitTextView -> TextView [style=\"dashed\"]\n    FontFitTextView -> TypedValue [style=\"dashed\"]\n    FontFitTextView -> Context [style=\"dashed\"]\n    Context -> FontFitTextView [penwidth=2]\n    AttributeSet -> FontFitTextView [penwidth=1]\n    FontFitTextView -> Paint [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 1362 1054\"><svg id=\"d2-svg\" class=\"d2-748863585\" width=\"1362\" height=\"1054\" viewBox=\"11 11 1362 1054\"><rect x=\"11.000000\" y=\"11.000000\" width=\"1362.000000\" height=\"1054.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-748863585 .text {\n\tfont-family: \"d2-748863585-font-regular\";\n}\n@font-face {\n\tfont-family: d2-748863585-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-748863585 .text-italic {\n\tfont-family: \"d2-748863585-font-italic\";\n}\n@font-face {\n\tfont-family: d2-748863585-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-748863585 .text-mono {\n\tfont-family: \"d2-748863585-font-mono\";\n}\n@font-face {\n\tfont-family: d2-748863585-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,d09GRgABAAAAABFoAAoAAAAAHdwAAgm6AAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAAGAAAABgld/X+GNtYXAAAAFUAAAAjgAAALQC6QPfZ2x5ZgAAAeQAAAeNAAAJ+Gf1/ftoZWFkAAAJdAAAADYAAAA2GanOOmhoZWEAAAmsAAAAJAAAACQGMwClaG10eAAACdAAAABfAAAAeEZQCUFsb2NhAAAKMAAAAD4AAAA+KK4mGG1heHAAAApwAAAAIAAAACAAUgJhbmFtZQAACpAAAAa4AAAQztydAx9wb3N0AAARSAAAACAAAAAg/7gAMwADAlgBkAAFAAACigJYAAAASwKKAlgAAAFeADIBIwAAAgsFCQMEAwICBCAAAvcCADgDAAAAAAAAAABBREJPAEAAIP//Au7/BgAAA9gBEWAAAZ8AAAAAAeYClAAAACAAA3icbMw/SwIBHIDh57qrrrrq+n/Vp4mgOVBudxARHEQQ8euoqKviKvrNfoKDk+/6woNEKkEhs0SllMr9+PXnX1OtratvaBzB6TTUWjp6BkYRsY9dbGMT61jFIuYxi2lMjvb5EhdSmUtXruVu3LpTuPfgUenJsxev3rz7UPn05ZsDAAAA//8BAAD//0XPILYAAHicjFZbbCNnFT7/74kn2TiXiT127Exsz0w8dnyJE49nxnEcx7fYcda7Sex4k6ZN9pbdXErKbkJ3WdTCtrAgropKJfqwqpDoW7UPFRJS4YkKoSAVRJGoCmIRaiV3VSQqTKiE2IzRjJ3dDbwgy/5fPP8533e+7zsDbZAEwA78KhigA0zQBzSASLGUh/V6eZJUvDZRUXgXppLoT+o+QsUoIT9/+/abxFjmr5mLX8GvHn0u/rWNjfnag7fXbt78bg39BjC4AXAM70MHUABmUvQKgpc3Gg1m0cx7efKB6xcuiu0het1/uL92fzn5tyn0+fV1ZWd8fEddwftH1w4OAAAQpBuH2I/vwiBAGycIUlSWxYjVRgoCzxmNtMVqFSOyYjMa0fmFl0qlO9WJZ5iwPTM8tRqNrk6FZlxh72XTwmvPbr9WHnVLA2z6Rrl8KyPwYiii338HAPfrfWqYaf1D3UHfV3+OutU63s//Oa/+ETBcBcAuvA+mJjtixGqlLUYjz1OUGJGlqMDzV39Z3JmcfG5mb+tcZbG6hfeHqjPTK0H1IZpJ5wtKE0+2cYjt+C6EdDxeRe9figqC1zuCT6LTwNlsTqzVQWMzXwpGPJdjudMuiVtj00Hl4lRycyjoPiuO53mZeWY47Y1tmqRg3BOKj/B+pnu4y58ZjcyFQkPyIBsNunwOk683lB6LViOAwA+AR/A+kAAsxUsszVMIf4CJD/BsPn/0E73XAAAO4X3oAhANotlqtYmyrJhFw8P3lrcppo/oG+zdqv4W76uvx6/E41fi6NLRNcCw0DjEBlQHBrwAttbUlBHMc0bSqyOkKV5TgzciK1I3pi3Wz0KnQ4W7LyJ7LBx+inN79lLrF7OkwbfuHK4Mb94cS5vYZEApBk+xCuehY/0jO0+r72dc4YzA3W5nx9zDHsCw2jjEDD4AC7BNdnmSp0SaFJs1LXpBbVSckaStVpTiF3gDmSkbDOxS4NJmcr2QWkwV3UWBL5h4l4wP3lnjfF+/XrmRnN5Ymb/MC3WXQ+NlvnGIB1D9/9DkSumL+dkXihPLzmFnWohVR8OLsdBpp8d32ZTYnS/vJvyDksMZrsaUxfCQXRryAQCGROMQ/fsJHMcFRK8kHhOnSI+qoZ7zX5i6Mh7MuwxEOUcanBVmJs1Ouf3TwyXTnVtze0nWufKzo1jKFZou1l2OcCW2dFmrk2scYgeqgxFcAIgzkqwgGB4Doi1Gkn2MJZlY60Ry29lI8WY+fz299TzG6kvtW6VggXUOraK3zsycnlWzib2Fud3JFze6HafKi3Za7uc03RtgpuHGMqrDKCSg1EKlYZCicuuQxYhNpPmWrzjBq4MTW5MzHE+OtljNLcMd/wf5tm/Mm11Oxs5LS+Kw61dfpvojVckcsPRZpNGdtaczt5bD6XR4JJMZr15SYudpTy/HLPylkEqOEJ2CyzZmJsypgHQ2YMpS0cHoaV9HRydDMUw0GTobRm9NRcWpKTE6pX474eH7CcI8TAshQLAKgDvxQSsRHumM4qmmxqjVcptBWBo/Vy5HE4FcAB+8szcsr19Qf4f46WwwqN4DgEYDVgDQ6/hdLAADAEYYHG1mxayeFQfQ2+SL4iWRsljFiD6OH5yp3GtIgcAozcVMT51DH2aPfi+NWie7e/Rn45q/UV1TkEiJNr012+P+9PYe9RnPkNgc8RdoWvSL4+WonbWUbAN2Tx+qpTj/ojd0pqi+gc5VPYL6Q3TOH9DOY/yoDpYnapyAnyMJYfkRfFSr/Dd6XeuYQXXogYETbjppV23IwdRONruTav7mq9V8vlptuSixW57fTeQ2Koubm4uVDdCzQNTv1T1ke9xdS1u8jTY/mQWrOdLAPRW6tJFcn+Dm3Abi5XS1GQX5X+MfJ93+b1wv30iyzmfeQMYTWfAKALajOvQ9yUErCkjqlRxpEK5lB8JWs31oULkSRLW9iVxHZ6GjfaqkfgQICo1D3I3q4PuffaBTcWIbHO8CufBCUPBfzSYn6XRm7cLV9djmkI8rh5OR7OzCEhu5YAq5ZOdQyGV2Ml2WrDIx57FLNsbPuLheyi97vBmfrpHpxiHm8MvQ32Je4iVFEWmR5jXjtWz/rUKZ/+Z3OnOffirl+Zijjy2axJVELdl2927243TOdCphogDBmcYh+heqaVqwaVptKlVWqFZifbZUroiT/mlfOUsSnmXT+gU0ot6fzgbCaEF1VAMyIGgHwPOopqXRE/tGEW2PNw/v1V4jSHJ3uxwnOwmirac9UY639xGEsYOMlza3YyYTYTLJqKbWuDTPp7mHD5sncqiOB+LqqvhAx54CwDZUAzuAqHgflVBE0sa33lVIMvX2m0+f6RrsIbqZruLSvZ+uVHvYXqLH2TP/8JNnzQGLJWjZ+vs/r9EjtDVgu6bfO9YIYy+qgUPjoTVORTmxPbvxV4cY6pStU0z19XxUudnt6iG6BkzbZ9/vk+feO5U2EBOhIfSx+g/3LM8XWdR1VB8taXmj5cT3UA3aWjubQokPURT9KKs69Nqf4BJ6Dr8LnVqat9RDW4woyAgCwwgCLvGDg7z2BYD/AAAA//8BAAD//8kNDusAAAAAAQAAAAIJus0WaVNfDzz1AAMD6AAAAADcHQ33AAAAANwcc0v/P/46AxkEJAAAAAMAAgAAAAAAAAABAAAD2P7vAAACWP8//z8DGQABAAAAAAAAAAAAAAAAAAAAHnicLIuxCoFhAACvmzyGmcmqPxEipdguZfUmXsBjeop/+abrrs7YGUvjYHyNj3E0VsbaeBpv42FMxsm4jvYybsZ2+DT4My7G2bgbC2NvbMbznwEAAP//AQAA//+DCRPOAAAAACoATgB+AJIAtgD6AQwBKAFkAZgByAH8AjICnALAAswC6gMcAz4DagOeA74D/AQiBEQEegSmBNQE5AT8AAAAAQAAAB4B+AAqAGUABgABAAAAAAAAAAAAAAAAAAMAA3icnJZLbJPZFcd/zrkBv3gZVA0IVVcjhKYIjJ1JwE0g4JABwiBCSWbaClHVJMaxSOzIdmDoYhZdVl11XXUzXbQStAolaiaBQiCkagWq1EU1q666qLroqppFV9V3vuPEcRI6g5DI7z7O/57Xvf6Ai3ILIeKiEUiCcYQkSeMODvGOsZDklLEjyUXjTpKMGm8jyQ+Nt5Ni0jjKYT41jnGYXxrHOcKfjROc4D/GSQYjR4x30hupGO/iYORXxrvpiiwb72nxM8XByJfGe1d1YsBKR8o4wjc7vjDuYGfHl8bCZXHGrmVPJ+Ny1XgbR+SR8Xaeyd+No3S7XxjH6HZ/NU7Q1bnNeIf4zpzxTrqj3ws5ArujPzWOsDv6c+MODkTvGwvJ6IqxIxU1/Ugnqeg/jLeRilosQf5jUeMoh2IHjGP4WL9xnKOxHxgnyMR+YpwkHVsw3kFX7J/GO8nFmzq7OBy/ZrybU/FPjPe0+Jzi3bjlKrK3RXPfqub+CKTifzOOkIo35zt4N/5fY2Ff4qCx40AiY9zJgcQl420cSIwbb2df4lPjKJnEz4xjvJd4bhznaOJfxgm6k98wTpJLNjV3cir5Y+NdZJJ/MN7NxeS/jfe0+Jmia8cJ472BjszKM1mUV3gKLVyijOcwnkm8PJY5vMzKgizJnDyWV/JE5uS5fCb35bH8Hh+5JEvyQP4kT/DysIXnW3hFPpMHsiQP5XNZkKd4l5UFeSlL8rksyqLOvjL7WfmjvMZzveMLbgRnyCN5oCqhLwtyX+ZlTpYDHa6T4YYsy0t5Jk/ld2q/onq/wcszmZXXsiizuvPYFjufynON8YUsy5wsyW/lRXOW6xzhhryQ1/JYHspTWQxODc6Wl3h5pDOzahPObO7joS1Ovo+XOXkis5qFIMvLzXn196ie3pJfjqqna3VryXfbWknHG/PeUhXbsVpJfo2niwxZMniO2ahLR3nGqXKTIp4R7lGnQZEp6niGqDBGlRrT+n9B18bxvMcEDRpM08txjnNX/6UprKql1XKK43wr8Ie7lGkwgecaReoUqXHH1M5TpUIDzxUKTAW++HcYocoMNcYo+v2kW8d4zlFlXOkqNaqqWmKGSQrU6CJNhvfJ0UeeQQYYpm+dQtM+tD7WZh9aDTPAB3ysvtYpq5d+nfYEVRoaaYU7eLK6liZLlhP0MUWB2xR11y2KfKIeBwo9pDlBDye0Ll/ds/VZKGudCngaWp9xrV2w7zaeKrfeusJljTWoWGD3ERWtX7g2QsN2hqdXGOe42nuNdEIz5lV5Ritbo6y702/lzVUKGr9nkDSei6Ya9NWoZjf4O6P9FvhdpPI1+rPBPaYpMsqE5XOtH0c0hw3uak7XMj5JWStQ0U4OcjKjWQjjbmZthCEu4xlW/co65cvrFIJI2vssq32U1tgmNj13rf53KFDWDrnJpK6s3beCnpvnO8oNevFt2akzphWapqE1qqtWWmtQ4jjDnOdymyf/P0fj+jes/U1mVrsnjC7omuCW5xnRyo/4/XgGdDzEiGbkuwwxykWG+YhRHee5xjXyXGGUIT5Q22Gu6XswzBUG1WJIOVw7rzfgCt/H8yFDuifQLlp+wooFN3Nava+r72Evl5liWnMeeJ7WWIsa4devsOeWqTZt62ozRplbutNr/Sp61wuUrCum1cMpzWWzN9ZuXdgRUxpLUNu19RJVfV9renMDVc89ezuCbg19Cl+Ixleoavqteqa+msOi+rx+XLLfgbK+jeGr0/xGGdFfgrL+fo2p14FtEFHwe9k+M79hZkVrVeMm5bDXZIVz3NPTJu0eeW5qbGoRfplQ1yrUtUaBRz9SlWrzm8ReiyolfZ+mNXNjeqPu6SjsAv0q2XJvwV69mmb9dvN7ZMPZwVs1ae++19hKpn6IGxSYNJWKvZSeCjP6+1nT1fCuaWxk3+hPu1K99UtlQxWP6tveXpP22m62S79m2ivjsuuqvZndijvjzrp+l3cDrt99G+8y7TOU3Md4l8O7v+BdHu9OuozLux53wfW6jDvlci7vMkp51+tygVXkknK/ap3RHafdh8GKPNxyZX7LlRU976zLrp3gskpnXc71uT6Xcxdcj65m3DDe9bqzLuMGgnGzB9XvC6rT6067c24gVHenXb/rc5ebvegGXM6dcf3ufdUYbDmz2/W4wcCzZi9uujf04KTrcj3upOt2/WGmmv24pR8n3WmXcb16Tr9GlQlUm525hV89VpFTGn+wZ8D1BBlp7bWNdQ764Y012pBvtdjQHW/Umd+sM95osfI/AAAA//8BAAD//5uVuAcAAwAAAAAAAP+1ADIAAAABAAAAAAAAAAAAAAAAAAAAAA==\");\n}\n.d2-748863585 .text-mono-bold {\n\tfont-family: \"d2-748863585-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-748863585-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-748863585 .fill-N1{fill:#ECEDED;}\n\t\t.d2-748863585 .fill-N2{fill:#676C7E;}\n\t\t.d2-748863585 .fill-N3{fill:#9499AB;}\n\t\t.d2-748863585 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-748863585 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-748863585 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-748863585 .fill-N7{fill:#151719;}\n\t\t.d2-748863585 .fill-B1{fill:#717D86;}\n\t\t.d2-748863585 .fill-B2{fill:#717D86;}\n\t\t.d2-748863585 .fill-B3{fill:#ffff00;}\n\t\t.d2-748863585 .fill-B4{fill:#151719;}\n\t\t.d2-748863585 .fill-B5{fill:#151719;}\n\t\t.d2-748863585 .fill-B6{fill:#151719;}\n\t\t.d2-748863585 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-748863585 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-748863585 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-748863585 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-748863585 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-748863585 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-748863585 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-748863585 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-748863585 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-748863585 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-748863585 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-748863585 .stroke-N7{stroke:#151719;}\n\t\t.d2-748863585 .stroke-B1{stroke:#717D86;}\n\t\t.d2-748863585 .stroke-B2{stroke:#717D86;}\n\t\t.d2-748863585 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-748863585 .stroke-B4{stroke:#151719;}\n\t\t.d2-748863585 .stroke-B5{stroke:#151719;}\n\t\t.d2-748863585 .stroke-B6{stroke:#151719;}\n\t\t.d2-748863585 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-748863585 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-748863585 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-748863585 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-748863585 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-748863585 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-748863585 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-748863585 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-748863585 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-748863585 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-748863585 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-748863585 .background-color-N7{background-color:#151719;}\n\t\t.d2-748863585 .background-color-B1{background-color:#717D86;}\n\t\t.d2-748863585 .background-color-B2{background-color:#717D86;}\n\t\t.d2-748863585 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-748863585 .background-color-B4{background-color:#151719;}\n\t\t.d2-748863585 .background-color-B5{background-color:#151719;}\n\t\t.d2-748863585 .background-color-B6{background-color:#151719;}\n\t\t.d2-748863585 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-748863585 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-748863585 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-748863585 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-748863585 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-748863585 .color-N1{color:#ECEDED;}\n\t\t.d2-748863585 .color-N2{color:#676C7E;}\n\t\t.d2-748863585 .color-N3{color:#9499AB;}\n\t\t.d2-748863585 .color-N4{color:#CFD2DD;}\n\t\t.d2-748863585 .color-N5{color:#DEE1EB;}\n\t\t.d2-748863585 .color-N6{color:#EEF1F8;}\n\t\t.d2-748863585 .color-N7{color:#151719;}\n\t\t.d2-748863585 .color-B1{color:#717D86;}\n\t\t.d2-748863585 .color-B2{color:#717D86;}\n\t\t.d2-748863585 .color-B3{color:#ffff00;}\n\t\t.d2-748863585 .color-B4{color:#151719;}\n\t\t.d2-748863585 .color-B5{color:#151719;}\n\t\t.d2-748863585 .color-B6{color:#151719;}\n\t\t.d2-748863585 .color-AA2{color:#ECEDED;}\n\t\t.d2-748863585 .color-AA4{color:#CFD2DD;}\n\t\t.d2-748863585 .color-AA5{color:#DEE1EB;}\n\t\t.d2-748863585 .color-AB4{color:#CFD2DD;}\n\t\t.d2-748863585 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"391.000000\" y=\"57.000000\" width=\"600.000000\" height=\"496.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"691.000000\" y=\"90.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"87.000000\" y=\"743.000000\" width=\"1208.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"691.000000\" y=\"776.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"441.000000\" y=\"112.000000\" width=\"500.000000\" height=\"386.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"691.000000\" y=\"141.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.content\"><g class=\"shape\" ><rect x=\"137.000000\" y=\"798.000000\" width=\"212.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"243.000000\" y=\"827.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">content</text></g><g id=\"android.graphics\"><g class=\"shape\" ><rect x=\"369.000000\" y=\"798.000000\" width=\"192.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"465.000000\" y=\"827.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">graphics</text></g><g id=\"android.util\"><g class=\"shape\" ><rect x=\"581.000000\" y=\"798.000000\" width=\"421.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"791.500000\" y=\"827.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"android.widget\"><g class=\"shape\" ><rect x=\"1022.000000\" y=\"798.000000\" width=\"223.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1133.500000\" y=\"827.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">widget</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"491.000000\" y=\"167.000000\" width=\"400.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"691.000000\" y=\"192.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.content.Context\"><g class=\"shape\" ><rect x=\"187.000000\" y=\"848.000000\" width=\"112.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"243.000000\" y=\"886.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Context</text></g><g id=\"android.graphics.Paint\"><g class=\"shape\" ><rect x=\"419.000000\" y=\"848.000000\" width=\"92.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"465.000000\" y=\"886.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Paint</text></g><g id=\"android.util.AttributeSet\"><g class=\"shape\" ><rect x=\"631.000000\" y=\"848.000000\" width=\"160.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"711.000000\" y=\"886.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">AttributeSet</text></g><g id=\"android.util.TypedValue\"><g class=\"shape\" ><rect x=\"811.000000\" y=\"848.000000\" width=\"141.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"881.500000\" y=\"886.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">TypedValue</text></g><g id=\"android.widget.TextView\"><g class=\"shape\" ><rect x=\"1072.000000\" y=\"848.000000\" width=\"123.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1133.500000\" y=\"886.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">TextView</text></g><g id=\"io.sensable.client.component\"><g class=\"shape\" ><rect x=\"541.000000\" y=\"222.000000\" width=\"300.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"691.000000\" y=\"243.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">component</text></g><g id=\"io.sensable.client.component.FontFitTextView\"><g class=\"shape\" ><rect x=\"591.000000\" y=\"272.000000\" width=\"200.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"691.000000\" y=\"310.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">FontFitTextView</text></g><g id=\"(io.sensable.client.component.FontFitTextView -&gt; android.content.Context)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 625.250000 339.000000 L 625.250000 588.000000 S 625.250000 598.000000 615.250000 598.000000 L 253.916000 598.000000 S 243.916000 598.000000 243.916000 608.000000 L 243.916000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /><text x=\"278.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.component.FontFitTextView -&gt; android.graphics.Paint)[0]\"><path d=\"M 658.583008 339.000000 L 658.583008 638.000000 S 658.583008 648.000000 648.583008 648.000000 L 475.915985 648.000000 S 465.915985 648.000000 465.915985 658.000000 L 465.915985 844.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /><text x=\"500.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.component.FontFitTextView -&gt; android.util.AttributeSet)[0]\"><path d=\"M 691.916016 339.000000 L 691.916016 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /><text x=\"726.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.component.FontFitTextView -&gt; android.util.TypedValue)[0]\"><path d=\"M 725.250000 339.000000 L 725.250000 638.000000 S 725.250000 648.000000 735.250000 648.000000 L 872.416016 648.000000 S 882.416016 648.000000 882.416016 658.000000 L 882.416016 844.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /><text x=\"916.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.component.FontFitTextView -&gt; android.widget.TextView)[0]\"><path d=\"M 758.583008 339.000000 L 758.583008 588.000000 S 758.583008 598.000000 768.583008 598.000000 L 1124.416016 598.000000 S 1134.416016 598.000000 1134.416016 608.000000 L 1134.416016 844.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /><text x=\"1168.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(android.content.Context -&gt; io.sensable.client.component.FontFitTextView)[0]\"><path d=\"M 243.916000 915.000000 L 243.916000 1054.000000 S 243.916000 1064.000000 233.916000 1064.000000 L 22.000000 1064.000000 S 12.000000 1064.000000 12.000000 1054.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 648.583008 12.000000 S 658.583008 12.000000 658.583008 22.000000 L 658.583008 269.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /></g><g id=\"(android.util.AttributeSet -&gt; io.sensable.client.component.FontFitTextView)[0]\"><path d=\"M 711.916016 915.000000 L 711.916016 1054.000000 S 711.916016 1064.000000 721.916016 1064.000000 L 1361.833008 1064.000000 S 1371.833008 1064.000000 1371.833008 1054.000000 L 1371.833008 22.000000 S 1371.833008 12.000000 1361.833008 12.000000 L 735.250000 12.000000 S 725.250000 12.000000 725.250000 22.000000 L 725.250000 269.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-748863585)\" /></g><mask id=\"d2-748863585\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"1362\" height=\"1054\">\n<rect x=\"11\" y=\"11\" width=\"1362\" height=\"1054\" fill=\"white\"></rect>\n<rect x=\"681.000000\" y=\"62.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"646.000000\" y=\"748.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"647.000000\" y=\"117.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"204.000000\" y=\"803.000000\" width=\"78\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"422.500000\" y=\"803.000000\" width=\"85\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"775.000000\" y=\"803.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1099.000000\" y=\"803.000000\" width=\"69\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"667.500000\" y=\"172.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"209.500000\" y=\"870.500000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"441.500000\" y=\"870.500000\" width=\"47\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"653.500000\" y=\"870.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"833.500000\" y=\"870.500000\" width=\"96\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1094.500000\" y=\"870.500000\" width=\"78\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"651.500000\" y=\"227.000000\" width=\"79\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"619.000000\" y=\"294.500000\" width=\"144\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.component.FontFitTextView -> android.content.Context: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.component.FontFitTextView -> android.graphics.Paint: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.component.FontFitTextView -> android.util.AttributeSet: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.component.FontFitTextView -> android.util.TypedValue: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.component.FontFitTextView -> android.widget.TextView: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.content.Context -> io.sensable.client.component.FontFitTextView: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.util.AttributeSet -> io.sensable.client.component.FontFitTextView: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.widget.TextView: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.util.TypedValue: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.graphics.Paint: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.util.AttributeSet: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.util.AttributeSet: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.component.FontFitTextView: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.component.FontFitTextView: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "dc8f31b0-b7ad-8685-8f4c-d564be408ce0",
            "ancestors": [],
            "description": "Is an extension of the TextView class that adjusts the font size to fit the text within a specified width while maintaining a consistent aspect ratio. It uses a `Paint` object to measure and resize the text, recalculating the dimensions when its width or height changes. The class also updates the text size based on the view's new width and height.",
            "name": "FontFitTextView",
            "location": {
              "start": 20,
              "insert": 13,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 12,
                "end": 19
              }
            },
            "item_type": "class",
            "length": 133,
            "docLength": 7
          },
          {
            "id": "abf1fe28-ec54-71a4-8a41-553b5c958754",
            "ancestors": [
              "dc8f31b0-b7ad-8685-8f4c-d564be408ce0"
            ],
            "description": "Initializes a private variable `mTestPaint` with a new instance of `Paint`. It then sets the properties of the new paint to match those of an existing `Paint` object retrieved from the current context using `getPaint()`.",
            "params": [],
            "usage": {
              "language": "java",
              "code": "FontFitTextView myTextView = new FontFitTextView(context);\nmyTextView.setText(\"This text will be resized to fit in the width\");\n",
              "description": "\nAdjusts the font size of the text within the `myTextView` component so that it fits within its specified width."
            },
            "name": "initialise",
            "location": {
              "start": 38,
              "insert": 32,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 31,
                "end": 37
              }
            },
            "item_type": "method",
            "length": 5,
            "docLength": 6
          },
          {
            "id": "d3c4f8a7-b4ff-9287-b849-6481363c58e3",
            "ancestors": [
              "dc8f31b0-b7ad-8685-8f4c-d564be408ce0"
            ],
            "description": "Adjusts the text size to fit within a given width while taking into account left and right padding. It iteratively narrows down the range of possible sizes by measuring the text's width at each midpoint until it converges on the correct size.",
            "params": [
              {
                "name": "text",
                "type_name": "String",
                "description": "string whose font size is to be adjusted to fit within the specified width.",
                "complex_type": false
              },
              {
                "name": "textWidth",
                "type_name": "int",
                "description": "width of the available space for rendering the text, from which the optimal font size is calculated to fit the given text within that width.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "TextView tv = new FontFitTextView(this);\ntv.setText(\"This text will fit in the available width.\");\nint textSizeWidth = tv.getWidth() - tv.getPaddingLeft() - tv.getPaddingRight();\nrefitText(tv.getText().toString(), textSizeWidth);\n",
              "description": "\nThis code creates a TextView object and sets its text. It then calculates the target width for the text, which is the width of the view minus the padding on both sides. The method refitText is called with this target width as an argument to resize the font so that it fits within the available width."
            },
            "name": "refitText",
            "location": {
              "start": 57,
              "insert": 47,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 46,
                "end": 56
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 10
          },
          {
            "id": "869c7d71-5024-87b5-e146-2e3ca22a4ad1",
            "ancestors": [
              "dc8f31b0-b7ad-8685-8f4c-d564be408ce0"
            ],
            "description": "Adjusts the size of a view based on its content and available space. It first calls the superclass's `onMeasure` method to set up the measurement process, then retrieves the parent's width and updates the view's height based on the text content.",
            "params": [
              {
                "name": "widthMeasureSpec",
                "type_name": "int",
                "description": "measure specification for the width of the view, which specifies how much space is available for the view to occupy.",
                "complex_type": false
              },
              {
                "name": "heightMeasureSpec",
                "type_name": "int",
                "description": "measure specification for the view's height, which is used to determine the actual height of the view.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "onMeasure(1000, 500);\n",
              "description": "\nThis will set the width and height for measuring."
            },
            "name": "onMeasure",
            "location": {
              "start": 90,
              "insert": 80,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 79,
                "end": 89
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 10
          },
          {
            "id": "136117e6-da64-cebf-0743-e44ccdac8bfb",
            "ancestors": [
              "dc8f31b0-b7ad-8685-8f4c-d564be408ce0"
            ],
            "description": "Overrides a method to respond to changes in the text of an input field. It takes four parameters: the changed text, and the start and end positions of the change, and updates the layout based on the new text.",
            "params": [
              {
                "name": "text",
                "type_name": "CharSequence",
                "description": "character sequence that is being changed within the text field.",
                "complex_type": false
              },
              {
                "name": "start",
                "type_name": "int",
                "description": "0-based index of the first character changed during the text modification process.",
                "complex_type": false
              },
              {
                "name": "before",
                "type_name": "int",
                "description": "number of characters being removed from the text at the specified start position before making changes to it.",
                "complex_type": false
              },
              {
                "name": "after",
                "type_name": "int",
                "description": "number of characters added to the text at the specified position.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "FontFitTextView tv = (FontFitTextView) findViewById(R.id.tv);\ntv.setText(\"Some long text to fit\");\n",
              "description": ""
            },
            "name": "onTextChanged",
            "location": {
              "start": 124,
              "insert": 100,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 99,
                "end": 123
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 24
          },
          {
            "id": "b6c0a755-f1ec-969d-0145-915c1a26ecca",
            "ancestors": [
              "dc8f31b0-b7ad-8685-8f4c-d564be408ce0"
            ],
            "description": "Is overridden to handle changes in width. It checks if the new width differs from the previous one, and if so, calls the `refitText` method with the current text and new width as arguments to adjust the text according to the changed width.",
            "params": [
              {
                "name": "w",
                "type_name": "int",
                "description": "new width of the view, which is compared with its previous width (`oldw`) to determine if a refitting of text is necessary.",
                "complex_type": false
              },
              {
                "name": "h",
                "type_name": "int",
                "description": "height of the view, which is not being used in this method.",
                "complex_type": false
              },
              {
                "name": "oldw",
                "type_name": "int",
                "description": "width of the view before it was resized, allowing the method to detect whether the width has changed since the last time the onSizeChanged method was called.",
                "complex_type": false
              },
              {
                "name": "oldh",
                "type_name": "int",
                "description": "previous height of the view, which is used for comparison with the current height (`h`) to determine if there has been a change in the view's size.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(new MyView(this));\n}\n\nclass MyView extends View {\n\n    public MyView(Context context) {\n        super(context);\n        // ...\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        Paint paint = new Paint();\n        String text = \"Hello, world!\";\n        int width = getWidth();\n        FontFitTextView textView = new FontFitTextView(getContext());\n        textView.setText(text);\n        textView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n        addView(textView);\n    }\n}\n",
              "description": ""
            },
            "name": "onSizeChanged",
            "location": {
              "start": 143,
              "insert": 129,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 128,
                "end": 142
              }
            },
            "item_type": "method",
            "length": 6,
            "docLength": 14
          }
        ]
      }
    }
  },
  {
    "name": "TabsPagerAdapter.java",
    "path": "client/src/main/java/io/sensable/client/adapter/TabsPagerAdapter.java",
    "content": {
      "structured": {
        "description": "An extension of FragmentPagerAdapter that provides fragments for a tabbed interface with three tabs: FavouriteSensables, LocalSensables, and RemoteSensables. The adapter uses the index of the current tab to determine which fragment to display, returning either FavouriteSensablesFragment, LocalSensablesFragment, or RemoteSensablesFragment accordingly. It uses Android's support package v4 for FragmentManager and FragmentPagerAdapter.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    FragmentManager [label=\"android.support.v4.app.FragmentManager\", style=\"rounded,filled\"]\n    LocalSensablesFragment []\n    MainActivity []\n    FavouriteSensablesFragment []\n    FragmentPagerAdapter [label=\"android.support.v4.app.FragmentPagerAdapter\", style=\"rounded,filled\"]\n    RemoteSensablesFragment []\n    Fragment [label=\"android.support.v4.app.Fragment\", style=\"rounded,filled\"]\n    subgraph cluster_main {\n        // style=filled\n        color=\"#00000000\"\n        TabsPagerAdapter [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n        label = \"\"\n    }\n    TabsPagerAdapter -> Fragment [style=\"dashed\"]\n    TabsPagerAdapter -> Fragment [penwidth=1]\n    TabsPagerAdapter -> FragmentPagerAdapter [style=\"dashed\"]\n    FragmentManager -> TabsPagerAdapter [penwidth=1]\n    MainActivity -> TabsPagerAdapter [style=\"dashed\"]\n    TabsPagerAdapter -> FavouriteSensablesFragment [style=\"dashed\"]\n    TabsPagerAdapter -> FragmentManager [style=\"dashed\"]\n    TabsPagerAdapter -> LocalSensablesFragment [style=\"dashed\"]\n    TabsPagerAdapter -> RemoteSensablesFragment [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 1444 1771\"><svg id=\"d2-svg\" class=\"d2-3414717136\" width=\"1444\" height=\"1771\" viewBox=\"11 11 1444 1771\"><rect x=\"11.000000\" y=\"11.000000\" width=\"1444.000000\" height=\"1771.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-3414717136 .text {\n\tfont-family: \"d2-3414717136-font-regular\";\n}\n@font-face {\n\tfont-family: d2-3414717136-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3414717136 .text-italic {\n\tfont-family: \"d2-3414717136-font-italic\";\n}\n@font-face {\n\tfont-family: d2-3414717136-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3414717136 .text-mono {\n\tfont-family: \"d2-3414717136-font-mono\";\n}\n@font-face {\n\tfont-family: d2-3414717136-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3414717136 .text-mono-bold {\n\tfont-family: \"d2-3414717136-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-3414717136-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-3414717136 .fill-N1{fill:#ECEDED;}\n\t\t.d2-3414717136 .fill-N2{fill:#676C7E;}\n\t\t.d2-3414717136 .fill-N3{fill:#9499AB;}\n\t\t.d2-3414717136 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-3414717136 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-3414717136 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-3414717136 .fill-N7{fill:#151719;}\n\t\t.d2-3414717136 .fill-B1{fill:#717D86;}\n\t\t.d2-3414717136 .fill-B2{fill:#717D86;}\n\t\t.d2-3414717136 .fill-B3{fill:#ffff00;}\n\t\t.d2-3414717136 .fill-B4{fill:#151719;}\n\t\t.d2-3414717136 .fill-B5{fill:#151719;}\n\t\t.d2-3414717136 .fill-B6{fill:#151719;}\n\t\t.d2-3414717136 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-3414717136 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-3414717136 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-3414717136 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-3414717136 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-3414717136 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-3414717136 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-3414717136 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-3414717136 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-3414717136 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-3414717136 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-3414717136 .stroke-N7{stroke:#151719;}\n\t\t.d2-3414717136 .stroke-B1{stroke:#717D86;}\n\t\t.d2-3414717136 .stroke-B2{stroke:#717D86;}\n\t\t.d2-3414717136 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-3414717136 .stroke-B4{stroke:#151719;}\n\t\t.d2-3414717136 .stroke-B5{stroke:#151719;}\n\t\t.d2-3414717136 .stroke-B6{stroke:#151719;}\n\t\t.d2-3414717136 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-3414717136 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-3414717136 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-3414717136 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-3414717136 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-3414717136 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-3414717136 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-3414717136 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-3414717136 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-3414717136 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-3414717136 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-3414717136 .background-color-N7{background-color:#151719;}\n\t\t.d2-3414717136 .background-color-B1{background-color:#717D86;}\n\t\t.d2-3414717136 .background-color-B2{background-color:#717D86;}\n\t\t.d2-3414717136 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-3414717136 .background-color-B4{background-color:#151719;}\n\t\t.d2-3414717136 .background-color-B5{background-color:#151719;}\n\t\t.d2-3414717136 .background-color-B6{background-color:#151719;}\n\t\t.d2-3414717136 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-3414717136 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-3414717136 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-3414717136 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-3414717136 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-3414717136 .color-N1{color:#ECEDED;}\n\t\t.d2-3414717136 .color-N2{color:#676C7E;}\n\t\t.d2-3414717136 .color-N3{color:#9499AB;}\n\t\t.d2-3414717136 .color-N4{color:#CFD2DD;}\n\t\t.d2-3414717136 .color-N5{color:#DEE1EB;}\n\t\t.d2-3414717136 .color-N6{color:#EEF1F8;}\n\t\t.d2-3414717136 .color-N7{color:#151719;}\n\t\t.d2-3414717136 .color-B1{color:#717D86;}\n\t\t.d2-3414717136 .color-B2{color:#717D86;}\n\t\t.d2-3414717136 .color-B3{color:#ffff00;}\n\t\t.d2-3414717136 .color-B4{color:#151719;}\n\t\t.d2-3414717136 .color-B5{color:#151719;}\n\t\t.d2-3414717136 .color-B6{color:#151719;}\n\t\t.d2-3414717136 .color-AA2{color:#ECEDED;}\n\t\t.d2-3414717136 .color-AA4{color:#CFD2DD;}\n\t\t.d2-3414717136 .color-AA5{color:#DEE1EB;}\n\t\t.d2-3414717136 .color-AB4{color:#CFD2DD;}\n\t\t.d2-3414717136 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"97.000000\" y=\"57.000000\" width=\"1357.000000\" height=\"1043.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"90.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"283.000000\" y=\"1240.000000\" width=\"985.000000\" height=\"496.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"1273.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"147.000000\" y=\"112.000000\" width=\"1257.000000\" height=\"933.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"141.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.support\"><g class=\"shape\" ><rect x=\"333.000000\" y=\"1295.000000\" width=\"885.000000\" height=\"386.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"1324.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">support</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"197.000000\" y=\"167.000000\" width=\"1157.000000\" height=\"823.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"192.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.support.v4\"><g class=\"shape\" ><rect x=\"383.000000\" y=\"1350.000000\" width=\"785.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"1375.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">v4</text></g><g id=\"io.sensable.client.MainActivity\"><g class=\"shape\" ><rect x=\"893.000000\" y=\"217.000000\" width=\"161.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"973.500000\" y=\"255.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">MainActivity</text></g><g id=\"io.sensable.client.adapter\"><g class=\"shape\" ><rect x=\"844.000000\" y=\"368.000000\" width=\"380.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"1034.000000\" y=\"389.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">adapter</text></g><g id=\"android.support.v4.app\"><g class=\"shape\" ><rect x=\"433.000000\" y=\"1405.000000\" width=\"685.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"1426.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">app</text></g><g id=\"io.sensable.client.views\"><g class=\"shape\" ><rect x=\"299.000000\" y=\"774.000000\" width=\"953.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"775.500000\" y=\"795.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">views</text></g><g id=\"io.sensable.client.adapter.TabsPagerAdapter\"><g class=\"shape\" ><rect x=\"894.000000\" y=\"418.000000\" width=\"280.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1034.000000\" y=\"456.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">TabsPagerAdapter</text></g><g id=\"android.support.v4.app.Fragment\"><g class=\"shape\" ><rect x=\"483.000000\" y=\"1455.000000\" width=\"121.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"543.500000\" y=\"1493.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Fragment</text></g><g id=\"android.support.v4.app.FragmentManager\"><g class=\"shape\" ><rect x=\"624.000000\" y=\"1455.000000\" width=\"188.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"718.000000\" y=\"1493.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">FragmentManager</text></g><g id=\"android.support.v4.app.FragmentPagerAdapter\"><g class=\"shape\" ><rect x=\"832.000000\" y=\"1455.000000\" width=\"236.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"950.000000\" y=\"1493.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">FragmentPagerAdapter</text></g><g id=\"io.sensable.client.views.FavouriteSensablesFragment\"><g class=\"shape\" ><rect x=\"349.000000\" y=\"824.000000\" width=\"293.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"495.500000\" y=\"862.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">FavouriteSensablesFragment</text></g><g id=\"io.sensable.client.views.LocalSensablesFragment\"><g class=\"shape\" ><rect x=\"662.000000\" y=\"824.000000\" width=\"255.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"789.500000\" y=\"862.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">LocalSensablesFragment</text></g><g id=\"io.sensable.client.views.RemoteSensablesFragment\"><g class=\"shape\" ><rect x=\"937.000000\" y=\"824.000000\" width=\"265.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1069.500000\" y=\"862.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RemoteSensablesFragment</text></g><g id=\"io.sensable.client.(MainActivity -&gt; adapter.TabsPagerAdapter)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 987.999023 284.000000 L 987.999023 415.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"1022.000000\" y=\"408.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.TabsPagerAdapter -&gt; android.support.v4.app.Fragment)[0]\"><path d=\"M 929.666016 485.000000 L 929.666016 569.000000 S 929.666016 579.000000 919.666016 579.000000 L 257.166000 579.000000 S 247.166000 579.000000 247.166000 589.000000 L 247.166000 1185.000000 S 247.166000 1195.000000 257.166000 1195.000000 L 513.500000 1195.000000 S 523.500000 1195.000000 523.500000 1205.000000 L 523.500000 1452.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"558.000000\" y=\"1445.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.TabsPagerAdapter -&gt; android.support.v4.app.FragmentManager)[0]\"><path d=\"M 1104.666016 485.000000 L 1104.666016 619.000000 S 1104.666016 629.000000 1114.666016 629.000000 L 1282.166016 629.000000 S 1292.166016 629.000000 1292.166016 639.000000 L 1292.166016 1135.000000 S 1292.166016 1145.000000 1282.166016 1145.000000 L 728.166016 1145.000000 S 718.166016 1145.000000 718.166016 1155.000000 L 718.166016 1452.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"752.000000\" y=\"1445.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.adapter.TabsPagerAdapter -&gt; android.support.v4.app.FragmentPagerAdapter)[0]\"><path d=\"M 1139.666016 485.000000 L 1139.666016 569.000000 S 1139.666016 579.000000 1149.666016 579.000000 L 1293.166016 579.000000 S 1303.166016 579.000000 1303.166016 589.000000 L 1303.166016 1185.000000 S 1303.166016 1195.000000 1293.166016 1195.000000 L 960.166016 1195.000000 S 950.166016 1195.000000 950.166016 1205.000000 L 950.166016 1451.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"984.000000\" y=\"1445.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(adapter.TabsPagerAdapter -&gt; views.FavouriteSensablesFragment)[0]\"><path d=\"M 999.666016 485.000000 L 999.666016 669.000000 S 999.666016 679.000000 989.666016 679.000000 L 505.665985 679.000000 S 495.665985 679.000000 495.665985 689.000000 L 495.665985 821.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"530.000000\" y=\"814.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(adapter.TabsPagerAdapter -&gt; views.LocalSensablesFragment)[0]\"><path d=\"M 1034.666016 485.000000 L 1034.666016 719.000000 S 1034.666016 729.000000 1024.666016 729.000000 L 799.666016 729.000000 S 789.666016 729.000000 789.666016 739.000000 L 789.666016 821.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"824.000000\" y=\"814.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(adapter.TabsPagerAdapter -&gt; views.RemoteSensablesFragment)[0]\"><path d=\"M 1069.666016 485.000000 L 1069.666016 821.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /><text x=\"1104.000000\" y=\"814.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(android.support.v4.app.FragmentManager -&gt; io.sensable.client.adapter.TabsPagerAdapter)[0]\"><path d=\"M 718.166016 1522.000000 L 718.166016 1771.000000 S 718.166016 1781.000000 708.166016 1781.000000 L 22.000000 1781.000000 S 12.000000 1781.000000 12.000000 1771.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 1084.916016 12.000000 S 1094.916016 12.000000 1094.916016 22.000000 L 1094.916016 415.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /></g><g id=\"(io.sensable.client.adapter.TabsPagerAdapter -&gt; android.support.v4.app.Fragment)[1]\"><path d=\"M 964.666016 485.000000 L 964.666016 619.000000 S 964.666016 629.000000 954.666016 629.000000 L 268.165985 629.000000 S 258.165985 629.000000 258.165985 639.000000 L 258.165985 1135.000000 S 258.165985 1145.000000 268.165985 1145.000000 L 553.833008 1145.000000 S 563.833008 1145.000000 563.833008 1155.000000 L 563.833008 1452.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3414717136)\" /></g><mask id=\"d2-3414717136\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"1444\" height=\"1771\">\n<rect x=\"11\" y=\"11\" width=\"1444\" height=\"1771\" fill=\"white\"></rect>\n<rect x=\"765.500000\" y=\"62.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"730.500000\" y=\"1245.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"731.500000\" y=\"117.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"735.500000\" y=\"1300.000000\" width=\"80\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"752.000000\" y=\"172.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"765.500000\" y=\"1355.000000\" width=\"20\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"915.500000\" y=\"239.500000\" width=\"116\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1007.000000\" y=\"373.000000\" width=\"54\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"762.500000\" y=\"1410.000000\" width=\"26\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"756.500000\" y=\"779.000000\" width=\"38\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"957.500000\" y=\"440.500000\" width=\"153\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"505.500000\" y=\"1477.500000\" width=\"76\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"646.500000\" y=\"1477.500000\" width=\"143\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"854.500000\" y=\"1477.500000\" width=\"191\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"371.500000\" y=\"846.500000\" width=\"248\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"684.500000\" y=\"846.500000\" width=\"210\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"959.500000\" y=\"846.500000\" width=\"220\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.MainActivity -> io.sensable.client.adapter.TabsPagerAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> android.support.v4.app.Fragment: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> android.support.v4.app.FragmentManager: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> android.support.v4.app.FragmentPagerAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> io.sensable.client.views.FavouriteSensablesFragment: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> io.sensable.client.views.LocalSensablesFragment: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> io.sensable.client.views.RemoteSensablesFragment: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.support.v4.app.FragmentManager -> io.sensable.client.adapter.TabsPagerAdapter: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter -> android.support.v4.app.Fragment: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.support.v4.app.FragmentManager: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.support.v4.app.Fragment: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.support.v4.app.FragmentPagerAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.MainActivity: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.views.RemoteSensablesFragment: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.views.FavouriteSensablesFragment: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.views.LocalSensablesFragment: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.support.v4.app.FragmentManager: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.support.v4.app.Fragment: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.adapter.TabsPagerAdapter: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "293d78eb-cef2-adac-c146-5fc4d9716501",
            "ancestors": [],
            "description": "Extends FragmentPagerAdapter, providing fragments for a tabbed interface with three tabs: Top Rated, Games, and Movies. It determines the type of fragment to display based on its index and returns a corresponding `Fragment` instance. The class has a fixed count of 3 tabs.",
            "name": "TabsPagerAdapter",
            "location": {
              "start": 18,
              "insert": 13,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 12,
                "end": 17
              }
            },
            "item_type": "class",
            "length": 68,
            "docLength": 5
          },
          {
            "id": "a1708247-2df4-f9a8-014c-6b1c4b4aaa08",
            "ancestors": [
              "293d78eb-cef2-adac-c146-5fc4d9716501"
            ],
            "description": "Returns a Fragment instance based on the specified index, which determines the type of content to display. It uses a switch statement to handle three cases: FavouriteSensablesFragment for index 0, LocalSensablesFragment for index 1, and RemoteSensablesFragment for index 2.",
            "params": [
              {
                "name": "index",
                "type_name": "int",
                "description": "0-based index of a tab within a tab layout, determining which fragment to return from the switch statement.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "Fragment",
              "description": "a Fragment object, depending on the specified index.\n\nThe output is an instance of a fragment class. The type of fragment depends on the input index. If the index is 0, the output is an instance of `FavouriteSensablesFragment`. If the index is 1, the output is an instance of `LocalSensablesFragment`. If the index is 2, the output is an instance of `RemoteSensablesFragment`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "TabsPagerAdapter adapter = new TabsPagerAdapter(getSupportFragmentManager());\nFragment fragment = adapter.getItem(0);\n",
              "description": ""
            },
            "name": "getItem",
            "location": {
              "start": 49,
              "insert": 24,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 23,
                "end": 48
              }
            },
            "item_type": "method",
            "length": 17,
            "docLength": 25
          },
          {
            "id": "1a6a1dd1-d394-40a2-9b44-a5fe72e077f8",
            "ancestors": [
              "293d78eb-cef2-adac-c146-5fc4d9716501"
            ],
            "description": "Returns an integer representing the number of items, specifically the number of tabs. The method overrides a parent class's implementation and always returns a fixed value of 3.",
            "params": [],
            "returns": {
              "type_name": "integer",
              "description": "an integer value, specifically `3`.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "TabsPagerAdapter adapter = new TabsPagerAdapter(getSupportFragmentManager());\nViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);\nviewPager.setAdapter(adapter);\n",
              "description": ""
            },
            "name": "getCount",
            "location": {
              "start": 79,
              "insert": 67,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 66,
                "end": 78
              }
            },
            "item_type": "method",
            "length": 5,
            "docLength": 12
          }
        ]
      }
    }
  },
  {
    "name": "SensorHelper.java",
    "path": "client/src/main/java/io/sensable/client/SensorHelper.java",
    "content": {
      "structured": {
        "description": "A class named `SensorHelper` that provides utility methods for determining the unit of measurement and the image resource for various types of sensors. The class includes three main methods: `determineUnit`, which returns the unit of measurement based on the sensor type, `determineImage(int)`, which returns the corresponding image resource ID for a given sensor type, and `determineImage(String)`, which uses a case-insensitive match to determine the appropriate image resource ID for a given sensor name.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    ScheduledSensableService []\n    subgraph cluster_main {\n        // style=filled\n        color=\"#00000000\"\n        SensorHelper [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n        label = \"\"\n    }\n    Sensor [label=\"android.hardware.Sensor\", style=\"rounded,filled\"]\n    SensableListAdapter []\n    ScheduledSensableService -> SensorHelper [style=\"dashed\"]\n    SensableListAdapter -> SensorHelper [style=\"dashed\"]\n    SensorHelper -> Sensor [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 1024 980\"><svg id=\"d2-svg\" class=\"d2-2115285954\" width=\"1024\" height=\"980\" viewBox=\"11 11 1024 980\"><rect x=\"11.000000\" y=\"11.000000\" width=\"1024.000000\" height=\"980.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-2115285954 .text {\n\tfont-family: \"d2-2115285954-font-regular\";\n}\n@font-face {\n\tfont-family: d2-2115285954-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2115285954 .text-italic {\n\tfont-family: \"d2-2115285954-font-italic\";\n}\n@font-face {\n\tfont-family: d2-2115285954-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2115285954 .text-mono {\n\tfont-family: \"d2-2115285954-font-mono\";\n}\n@font-face {\n\tfont-family: d2-2115285954-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2115285954 .text-mono-bold {\n\tfont-family: \"d2-2115285954-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-2115285954-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-2115285954 .fill-N1{fill:#ECEDED;}\n\t\t.d2-2115285954 .fill-N2{fill:#676C7E;}\n\t\t.d2-2115285954 .fill-N3{fill:#9499AB;}\n\t\t.d2-2115285954 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-2115285954 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-2115285954 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-2115285954 .fill-N7{fill:#151719;}\n\t\t.d2-2115285954 .fill-B1{fill:#717D86;}\n\t\t.d2-2115285954 .fill-B2{fill:#717D86;}\n\t\t.d2-2115285954 .fill-B3{fill:#ffff00;}\n\t\t.d2-2115285954 .fill-B4{fill:#151719;}\n\t\t.d2-2115285954 .fill-B5{fill:#151719;}\n\t\t.d2-2115285954 .fill-B6{fill:#151719;}\n\t\t.d2-2115285954 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-2115285954 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-2115285954 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-2115285954 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-2115285954 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-2115285954 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-2115285954 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-2115285954 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-2115285954 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-2115285954 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-2115285954 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-2115285954 .stroke-N7{stroke:#151719;}\n\t\t.d2-2115285954 .stroke-B1{stroke:#717D86;}\n\t\t.d2-2115285954 .stroke-B2{stroke:#717D86;}\n\t\t.d2-2115285954 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-2115285954 .stroke-B4{stroke:#151719;}\n\t\t.d2-2115285954 .stroke-B5{stroke:#151719;}\n\t\t.d2-2115285954 .stroke-B6{stroke:#151719;}\n\t\t.d2-2115285954 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-2115285954 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-2115285954 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-2115285954 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-2115285954 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-2115285954 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-2115285954 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-2115285954 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-2115285954 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-2115285954 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-2115285954 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-2115285954 .background-color-N7{background-color:#151719;}\n\t\t.d2-2115285954 .background-color-B1{background-color:#717D86;}\n\t\t.d2-2115285954 .background-color-B2{background-color:#717D86;}\n\t\t.d2-2115285954 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-2115285954 .background-color-B4{background-color:#151719;}\n\t\t.d2-2115285954 .background-color-B5{background-color:#151719;}\n\t\t.d2-2115285954 .background-color-B6{background-color:#151719;}\n\t\t.d2-2115285954 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-2115285954 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-2115285954 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-2115285954 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-2115285954 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-2115285954 .color-N1{color:#ECEDED;}\n\t\t.d2-2115285954 .color-N2{color:#676C7E;}\n\t\t.d2-2115285954 .color-N3{color:#9499AB;}\n\t\t.d2-2115285954 .color-N4{color:#CFD2DD;}\n\t\t.d2-2115285954 .color-N5{color:#DEE1EB;}\n\t\t.d2-2115285954 .color-N6{color:#EEF1F8;}\n\t\t.d2-2115285954 .color-N7{color:#151719;}\n\t\t.d2-2115285954 .color-B1{color:#717D86;}\n\t\t.d2-2115285954 .color-B2{color:#717D86;}\n\t\t.d2-2115285954 .color-B3{color:#ffff00;}\n\t\t.d2-2115285954 .color-B4{color:#151719;}\n\t\t.d2-2115285954 .color-B5{color:#151719;}\n\t\t.d2-2115285954 .color-B6{color:#151719;}\n\t\t.d2-2115285954 .color-AA2{color:#ECEDED;}\n\t\t.d2-2115285954 .color-AA4{color:#CFD2DD;}\n\t\t.d2-2115285954 .color-AA5{color:#DEE1EB;}\n\t\t.d2-2115285954 .color-AB4{color:#CFD2DD;}\n\t\t.d2-2115285954 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"12.000000\" y=\"12.000000\" width=\"1022.000000\" height=\"627.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"523.000000\" y=\"45.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"384.000000\" y=\"719.000000\" width=\"302.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"535.000000\" y=\"752.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"62.000000\" y=\"62.000000\" width=\"922.000000\" height=\"522.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"523.000000\" y=\"91.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.hardware\"><g class=\"shape\" ><rect x=\"434.000000\" y=\"774.000000\" width=\"202.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"535.000000\" y=\"803.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">hardware</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"112.000000\" y=\"112.000000\" width=\"822.000000\" height=\"417.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"523.000000\" y=\"137.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.hardware.Sensor\"><g class=\"shape\" ><rect x=\"484.000000\" y=\"824.000000\" width=\"102.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"535.000000\" y=\"862.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Sensor</text></g><g id=\"io.sensable.client.SensorHelper\"><g class=\"shape\" ><rect x=\"455.000000\" y=\"413.000000\" width=\"160.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"535.000000\" y=\"451.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">SensorHelper</text></g><g id=\"io.sensable.client.scheduler\"><g class=\"shape\" ><rect x=\"162.000000\" y=\"162.000000\" width=\"375.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"349.500000\" y=\"183.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">scheduler</text></g><g id=\"io.sensable.client.views\"><g class=\"shape\" ><rect x=\"557.000000\" y=\"162.000000\" width=\"327.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"720.500000\" y=\"183.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">views</text></g><g id=\"io.sensable.client.scheduler.ScheduledSensableService\"><g class=\"shape\" ><rect x=\"212.000000\" y=\"212.000000\" width=\"275.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"349.500000\" y=\"250.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ScheduledSensableService</text></g><g id=\"io.sensable.client.views.SensableListAdapter\"><g class=\"shape\" ><rect x=\"607.000000\" y=\"212.000000\" width=\"227.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"720.500000\" y=\"250.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SensableListAdapter</text></g><g id=\"(io.sensable.client.SensorHelper -&gt; android.hardware.Sensor)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 535.000000 480.000000 L 535.000000 820.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2115285954)\" /><text x=\"569.000000\" y=\"814.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(scheduler.ScheduledSensableService -&gt; SensorHelper)[0]\"><path d=\"M 349.500000 279.000000 L 349.500000 363.000000 S 349.500000 373.000000 359.500000 373.000000 L 498.333008 373.000000 S 508.333008 373.000000 508.333008 383.000000 L 508.333008 410.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2115285954)\" /><text x=\"542.000000\" y=\"403.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(views.SensableListAdapter -&gt; SensorHelper)[0]\"><path d=\"M 720.500000 279.000000 L 720.500000 363.000000 S 720.500000 373.000000 710.500000 373.000000 L 571.666016 373.000000 S 561.666016 373.000000 561.666016 383.000000 L 561.666016 410.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2115285954)\" /><text x=\"596.000000\" y=\"403.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><mask id=\"d2-2115285954\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"1024\" height=\"980\">\n<rect x=\"11\" y=\"11\" width=\"1024\" height=\"980\" fill=\"white\"></rect>\n<rect x=\"513.000000\" y=\"17.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"490.000000\" y=\"724.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"479.000000\" y=\"67.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"487.500000\" y=\"779.000000\" width=\"95\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"499.500000\" y=\"117.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"506.500000\" y=\"846.500000\" width=\"57\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"477.500000\" y=\"435.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"316.000000\" y=\"167.000000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"701.500000\" y=\"167.000000\" width=\"38\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"234.500000\" y=\"234.500000\" width=\"230\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"629.500000\" y=\"234.500000\" width=\"182\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.SensorHelper -> android.hardware.Sensor: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.scheduler.ScheduledSensableService -> io.sensable.client.SensorHelper: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.views.SensableListAdapter -> io.sensable.client.SensorHelper: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.hardware.Sensor: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.SensorHelper: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.scheduler.ScheduledSensableService: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.views.SensableListAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.SensorHelper: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "aaca6c31-6d7f-ffb2-734b-b954e3235361",
            "ancestors": [],
            "description": "Provides utility functions to determine the unit of measurement for various sensors and retrieve corresponding image resources based on sensor types. It contains three main functions: `determineUnit` which returns the unit of measurement, `determineImage(int)` which retrieves an integer representing a drawable resource ID for a given sensor type, and `determineImage(String)` which does the same but takes a string parameter.",
            "name": "SensorHelper",
            "location": {
              "start": 15,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 7,
                "end": 14
              }
            },
            "item_type": "class",
            "length": 192,
            "docLength": 7
          },
          {
            "id": "47691854-cbb9-2393-ea48-7af386514ac3",
            "ancestors": [
              "aaca6c31-6d7f-ffb2-734b-b954e3235361"
            ],
            "description": "Takes an integer `sensorType` as input and returns a corresponding unit string for the sensor type. The function uses a switch statement to map the sensor type to its respective unit, covering various types of sensors such as accelerometer, magnetometer, gyroscope, and others.",
            "params": [
              {
                "name": "sensorType",
                "type_name": "int",
                "description": "type of sensor being used, which determines the corresponding unit to be returned by the function.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "String",
              "description": "a string representing the unit of measurement for a given sensor type.",
              "complex_type": false
            },
            "name": "determineUnit",
            "location": {
              "start": 29,
              "insert": 17,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 16,
                "end": 28
              }
            },
            "item_type": "method",
            "length": 53,
            "docLength": 12
          },
          {
            "id": "fcc65da2-aa11-c6b5-c243-fbea369f6eef",
            "ancestors": [
              "aaca6c31-6d7f-ffb2-734b-b954e3235361"
            ],
            "description": "Determines which image resource to display based on the type of sensor specified by the input parameter `sensorType`. It uses a switch statement to map each sensor type to a corresponding image resource and returns the selected image.",
            "params": [
              {
                "name": "sensorType",
                "type_name": "int",
                "description": "type of sensor and determines which corresponding image resource to be returned based on its value.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "integer",
              "description": "an integer value representing a specific sensor type.\n\nThe output is an integer value representing a drawable image resource ID. The value can be one of several predefined constants such as R.drawable.type_lux, R.drawable.type_accelerometer, and so on.",
              "complex_type": true
            },
            "name": "determineImage",
            "location": {
              "start": 94,
              "insert": 83,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 82,
                "end": 93
              }
            },
            "item_type": "method",
            "length": 53,
            "docLength": 11
          },
          {
            "id": "41b306f7-9755-7492-b945-17487d675290",
            "ancestors": [
              "aaca6c31-6d7f-ffb2-734b-b954e3235361"
            ],
            "description": "Determines an image based on a given sensor type. It converts the sensor type to lowercase and checks for various conditions, assigning a corresponding image resource ID. The function returns the determined image ID as an integer.",
            "params": [
              {
                "name": "sensorType",
                "type_name": "String",
                "description": "type of sensor that is being used, and its value determines which image to return based on a series of conditional checks.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "integer",
              "description": "an integer value representing a drawable resource ID.\n\nThe output is an integer representing a drawable image resource ID from R.drawable. The value of this integer determines which image is displayed based on the input sensorType parameter.",
              "complex_type": true
            },
            "name": "determineImage",
            "location": {
              "start": 158,
              "insert": 148,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 147,
                "end": 157
              }
            },
            "item_type": "method",
            "length": 47,
            "docLength": 10
          }
        ]
      }
    }
  },
  {
    "name": "SensableUser.java",
    "path": "client/src/main/java/io/sensable/client/SensableUser.java",
    "content": {
      "structured": {
        "description": "A class named SensableUser that handles user authentication and settings retrieval in an Android application using Retrofit library for making RESTful API calls. The class provides methods for logging in, logging out, retrieving user settings, saving user information to preferences, and updating login status. It also utilizes SharedPreferences for storing user data locally on the device.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_1 {\n        label=\"io\"\n        color=\"#33363A\"\n        SensableService []\n        subgraph cluster_2 {\n            label=\"sensable\"\n            color=\"#33363A\"\n            UserLogin []\n            User []\n            subgraph cluster_main {\n                // style=filled\n                color=\"#00000000\"\n                SensableUser [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n                label = \"\"\n            }\n            subgraph cluster_3 {\n                label=\"client\"\n                color=\"#33363A\"\n                ScheduledSensableService []\n            }\n        }\n    }\n    subgraph cluster_4 {\n        label=\"java\"\n        color=\"#33363A\"\n        CookieHandler [label=\"java.net.CookieHandler\", style=\"rounded,filled\"]\n        CookiePolicy [label=\"java.net.CookiePolicy\", style=\"rounded,filled\"]\n        CookieManager [label=\"java.net.CookieManager\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_5 {\n        label=\"retrofit\"\n        color=\"#33363A\"\n        Response [label=\"retrofit.client.Response\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_6 {\n        label=\"android\"\n        color=\"#33363A\"\n        SharedPreferences [label=\"android.content.SharedPreferences\", style=\"rounded,filled\"]\n        Log [label=\"android.util.Log\", style=\"rounded,filled\"]\n        Context [label=\"android.content.Context\", style=\"rounded,filled\"]\n    }\n    RestAdapter [label=\"retrofit.RestAdapter\", style=\"rounded,filled\"]\n    Callback [label=\"retrofit.Callback\", style=\"rounded,filled\"]\n    RetrofitError [label=\"retrofit.RetrofitError\", style=\"rounded,filled\"]\n    SensableUser -> CookieManager [style=\"dashed\"]\n    SensableUser -> SensableService [style=\"dashed\"]\n    SensableUser -> Context [style=\"dashed\"]\n    SensableUser -> Callback [style=\"dashed\"]\n    SensableUser -> SharedPreferences [style=\"dashed\"]\n    SharedPreferences -> SensableUser [penwidth=1]\n    SensableUser -> UserLogin [style=\"dashed\"]\n    Response -> SensableUser [penwidth=2]\n    User -> SensableUser [penwidth=2]\n    SensableUser -> RetrofitError [style=\"dashed\"]\n    SensableUser -> CookieHandler [style=\"dashed\"]\n    Context -> SensableUser [penwidth=1]\n    RetrofitError -> SensableUser [penwidth=2]\n    ScheduledSensableService -> SensableUser [style=\"dashed\"]\n    SensableUser -> Log [style=\"dashed\"]\n    SensableUser -> RestAdapter [style=\"dashed\"]\n    SensableUser -> CookiePolicy [style=\"dashed\"]\n    SensableUser -> User [style=\"dashed\"]\n    UserLogin -> SensableUser [penwidth=1]\n    SensableUser -> Response [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 2439 2711\"><svg id=\"d2-svg\" class=\"d2-3699360183\" width=\"2439\" height=\"2711\" viewBox=\"11 11 2439 2711\"><rect x=\"11.000000\" y=\"11.000000\" width=\"2439.000000\" height=\"2711.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-3699360183 .text {\n\tfont-family: \"d2-3699360183-font-regular\";\n}\n@font-face {\n\tfont-family: d2-3699360183-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3699360183 .text-italic {\n\tfont-family: \"d2-3699360183-font-italic\";\n}\n@font-face {\n\tfont-family: d2-3699360183-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3699360183 .text-mono {\n\tfont-family: \"d2-3699360183-font-mono\";\n}\n@font-face {\n\tfont-family: d2-3699360183-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-3699360183 .text-mono-bold {\n\tfont-family: \"d2-3699360183-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-3699360183-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-3699360183 .fill-N1{fill:#ECEDED;}\n\t\t.d2-3699360183 .fill-N2{fill:#676C7E;}\n\t\t.d2-3699360183 .fill-N3{fill:#9499AB;}\n\t\t.d2-3699360183 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-3699360183 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-3699360183 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-3699360183 .fill-N7{fill:#151719;}\n\t\t.d2-3699360183 .fill-B1{fill:#717D86;}\n\t\t.d2-3699360183 .fill-B2{fill:#717D86;}\n\t\t.d2-3699360183 .fill-B3{fill:#ffff00;}\n\t\t.d2-3699360183 .fill-B4{fill:#151719;}\n\t\t.d2-3699360183 .fill-B5{fill:#151719;}\n\t\t.d2-3699360183 .fill-B6{fill:#151719;}\n\t\t.d2-3699360183 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-3699360183 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-3699360183 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-3699360183 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-3699360183 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-3699360183 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-3699360183 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-3699360183 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-3699360183 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-3699360183 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-3699360183 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-3699360183 .stroke-N7{stroke:#151719;}\n\t\t.d2-3699360183 .stroke-B1{stroke:#717D86;}\n\t\t.d2-3699360183 .stroke-B2{stroke:#717D86;}\n\t\t.d2-3699360183 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-3699360183 .stroke-B4{stroke:#151719;}\n\t\t.d2-3699360183 .stroke-B5{stroke:#151719;}\n\t\t.d2-3699360183 .stroke-B6{stroke:#151719;}\n\t\t.d2-3699360183 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-3699360183 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-3699360183 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-3699360183 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-3699360183 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-3699360183 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-3699360183 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-3699360183 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-3699360183 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-3699360183 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-3699360183 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-3699360183 .background-color-N7{background-color:#151719;}\n\t\t.d2-3699360183 .background-color-B1{background-color:#717D86;}\n\t\t.d2-3699360183 .background-color-B2{background-color:#717D86;}\n\t\t.d2-3699360183 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-3699360183 .background-color-B4{background-color:#151719;}\n\t\t.d2-3699360183 .background-color-B5{background-color:#151719;}\n\t\t.d2-3699360183 .background-color-B6{background-color:#151719;}\n\t\t.d2-3699360183 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-3699360183 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-3699360183 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-3699360183 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-3699360183 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-3699360183 .color-N1{color:#ECEDED;}\n\t\t.d2-3699360183 .color-N2{color:#676C7E;}\n\t\t.d2-3699360183 .color-N3{color:#9499AB;}\n\t\t.d2-3699360183 .color-N4{color:#CFD2DD;}\n\t\t.d2-3699360183 .color-N5{color:#DEE1EB;}\n\t\t.d2-3699360183 .color-N6{color:#EEF1F8;}\n\t\t.d2-3699360183 .color-N7{color:#151719;}\n\t\t.d2-3699360183 .color-B1{color:#717D86;}\n\t\t.d2-3699360183 .color-B2{color:#717D86;}\n\t\t.d2-3699360183 .color-B3{color:#ffff00;}\n\t\t.d2-3699360183 .color-B4{color:#151719;}\n\t\t.d2-3699360183 .color-B5{color:#151719;}\n\t\t.d2-3699360183 .color-B6{color:#151719;}\n\t\t.d2-3699360183 .color-AA2{color:#ECEDED;}\n\t\t.d2-3699360183 .color-AA4{color:#CFD2DD;}\n\t\t.d2-3699360183 .color-AA5{color:#DEE1EB;}\n\t\t.d2-3699360183 .color-AB4{color:#CFD2DD;}\n\t\t.d2-3699360183 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"1153.000000\" y=\"157.000000\" width=\"1139.000000\" height=\"1803.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1722.500000\" y=\"190.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"72.000000\" y=\"2300.000000\" width=\"734.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"439.000000\" y=\"2333.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"retrofit\"><g class=\"shape\" ><rect x=\"826.000000\" y=\"2300.000000\" width=\"822.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1237.000000\" y=\"2333.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">retrofit</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"1668.000000\" y=\"2300.000000\" width=\"741.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"2038.500000\" y=\"2333.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"1203.000000\" y=\"212.000000\" width=\"1039.000000\" height=\"1693.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1722.500000\" y=\"241.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.content\"><g class=\"shape\" ><rect x=\"122.000000\" y=\"2355.000000\" width=\"440.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"342.000000\" y=\"2384.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">content</text></g><g id=\"android.util\"><g class=\"shape\" ><rect x=\"582.000000\" y=\"2355.000000\" width=\"174.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"669.000000\" y=\"2384.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"retrofit.Callback\"><g class=\"shape\" ><rect x=\"876.000000\" y=\"2355.000000\" width=\"123.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"937.500000\" y=\"2393.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Callback</text></g><g id=\"retrofit.RestAdapter\"><g class=\"shape\" ><rect x=\"1019.000000\" y=\"2355.000000\" width=\"149.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1093.500000\" y=\"2393.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RestAdapter</text></g><g id=\"retrofit.RetrofitError\"><g class=\"shape\" ><rect x=\"1188.000000\" y=\"2405.000000\" width=\"169.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1272.500000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RetrofitError</text></g><g id=\"retrofit.client\"><g class=\"shape\" ><rect x=\"1377.000000\" y=\"2355.000000\" width=\"221.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1487.500000\" y=\"2384.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">client</text></g><g id=\"java.net\"><g class=\"shape\" ><rect x=\"1718.000000\" y=\"2355.000000\" width=\"641.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"2038.500000\" y=\"2384.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">net</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"1253.000000\" y=\"397.000000\" width=\"774.000000\" height=\"567.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1640.000000\" y=\"422.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.content.Context\"><g class=\"shape\" ><rect x=\"172.000000\" y=\"2405.000000\" width=\"112.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"228.000000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Context</text></g><g id=\"android.content.SharedPreferences\"><g class=\"shape\" ><rect x=\"304.000000\" y=\"2405.000000\" width=\"208.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"408.000000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SharedPreferences</text></g><g id=\"android.util.Log\"><g class=\"shape\" ><rect x=\"632.000000\" y=\"2405.000000\" width=\"74.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"669.000000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Log</text></g><g id=\"io.sensable.SensableService\"><g class=\"shape\" ><rect x=\"1600.000000\" y=\"1554.000000\" width=\"189.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1694.500000\" y=\"1592.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SensableService</text></g><g id=\"io.sensable.model\"><g class=\"shape\" ><rect x=\"1809.000000\" y=\"1554.000000\" width=\"332.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1975.000000\" y=\"1579.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">model</text></g><g id=\"retrofit.client.Response\"><g class=\"shape\" ><rect x=\"1427.000000\" y=\"2405.000000\" width=\"121.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1487.500000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Response</text></g><g id=\"java.net.CookieHandler\"><g class=\"shape\" ><rect x=\"1768.000000\" y=\"2405.000000\" width=\"170.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1853.000000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CookieHandler</text></g><g id=\"java.net.CookieManager\"><g class=\"shape\" ><rect x=\"1958.000000\" y=\"2405.000000\" width=\"170.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2043.000000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CookieManager</text></g><g id=\"java.net.CookiePolicy\"><g class=\"shape\" ><rect x=\"2148.000000\" y=\"2405.000000\" width=\"161.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2228.500000\" y=\"2443.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CookiePolicy</text></g><g id=\"io.sensable.client.SensableUser\"><g class=\"shape\" ><rect x=\"1303.000000\" y=\"848.000000\" width=\"520.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1563.000000\" y=\"886.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">SensableUser</text></g><g id=\"io.sensable.model.User\"><g class=\"shape\" ><rect x=\"1859.000000\" y=\"1604.000000\" width=\"82.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1900.000000\" y=\"1642.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">User</text></g><g id=\"io.sensable.model.UserLogin\"><g class=\"shape\" ><rect x=\"1961.000000\" y=\"1604.000000\" width=\"130.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2026.000000\" y=\"1642.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">UserLogin</text></g><g id=\"io.sensable.client.scheduler\"><g class=\"shape\" ><rect x=\"1549.000000\" y=\"447.000000\" width=\"375.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"1736.500000\" y=\"468.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">scheduler</text></g><g id=\"io.sensable.client.scheduler.ScheduledSensableService\"><g class=\"shape\" ><rect x=\"1599.000000\" y=\"497.000000\" width=\"275.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1736.500000\" y=\"535.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ScheduledSensableService</text></g><g id=\"(io.sensable.client.SensableUser -&gt; android.content.Context)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 1324.677979 915.000000 L 1324.677979 1995.000000 S 1324.677979 2005.000000 1314.677979 2005.000000 L 238.000000 2005.000000 S 228.000000 2005.000000 228.000000 2015.000000 L 228.000000 2402.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"262.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; android.content.SharedPreferences)[0]\"><path d=\"M 1348.750000 915.000000 L 1348.750000 2045.000000 S 1348.750000 2055.000000 1338.750000 2055.000000 L 418.000000 2055.000000 S 408.000000 2055.000000 408.000000 2065.000000 L 408.000000 2402.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"442.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; android.util.Log)[0]\"><path d=\"M 1372.821045 915.000000 L 1372.821045 2095.000000 S 1372.821045 2105.000000 1362.821045 2105.000000 L 679.000000 2105.000000 S 669.000000 2105.000000 669.000000 2115.000000 L 669.000000 2401.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"703.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.(client.SensableUser -&gt; SensableService)[0]\"><path d=\"M 1695.213989 915.000000 L 1695.213989 1551.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1729.000000\" y=\"1544.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.(client.SensableUser -&gt; model.User)[0]\"><path d=\"M 1748.963989 915.000000 L 1748.963989 1049.000000 S 1748.963989 1059.000000 1758.963989 1059.000000 L 1890.713989 1059.000000 S 1900.713989 1059.000000 1900.713989 1069.000000 L 1900.713989 1601.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1935.000000\" y=\"1594.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.(client.SensableUser -&gt; model.UserLogin)[0]\"><path d=\"M 1786.107056 915.000000 L 1786.107056 999.000000 S 1786.107056 1009.000000 1796.107056 1009.000000 L 2016.713989 1009.000000 S 2026.713989 1009.000000 2026.713989 1019.000000 L 2026.713989 1601.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"2061.000000\" y=\"1594.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; retrofit.Callback)[0]\"><path d=\"M 1396.891968 915.000000 L 1396.891968 2145.000000 S 1396.891968 2155.000000 1386.891968 2155.000000 L 947.500000 2155.000000 S 937.500000 2155.000000 937.500000 2165.000000 L 937.500000 2351.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"972.000000\" y=\"2345.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; retrofit.RestAdapter)[0]\"><path d=\"M 1420.963989 915.000000 L 1420.963989 2195.000000 S 1420.963989 2205.000000 1410.963989 2205.000000 L 1103.500000 2205.000000 S 1093.500000 2205.000000 1093.500000 2215.000000 L 1093.500000 2351.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1128.000000\" y=\"2345.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; retrofit.RetrofitError)[0]\"><path d=\"M 1450.357056 915.000000 L 1450.357056 2245.000000 S 1450.357056 2255.000000 1440.357056 2255.000000 L 1282.500000 2255.000000 S 1272.500000 2255.000000 1272.500000 2265.000000 L 1272.500000 2402.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1307.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; retrofit.client.Response)[0]\"><path d=\"M 1487.500000 915.000000 L 1487.500000 2402.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1522.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; java.net.CookieHandler)[0]\"><path d=\"M 1511.571045 915.000000 L 1511.571045 2095.000000 S 1511.571045 2105.000000 1521.571045 2105.000000 L 1843.000000 2105.000000 S 1853.000000 2105.000000 1853.000000 2115.000000 L 1853.000000 2401.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1887.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; java.net.CookieManager)[0]\"><path d=\"M 1535.641968 915.000000 L 1535.641968 2045.000000 S 1535.641968 2055.000000 1545.641968 2055.000000 L 2033.000000 2055.000000 S 2043.000000 2055.000000 2043.000000 2065.000000 L 2043.000000 2401.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"2077.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensableUser -&gt; java.net.CookiePolicy)[0]\"><path d=\"M 1559.713989 915.000000 L 1559.713989 1995.000000 S 1559.713989 2005.000000 1569.713989 2005.000000 L 2218.500000 2005.000000 S 2228.500000 2005.000000 2228.500000 2015.000000 L 2228.500000 2401.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"2263.000000\" y=\"2395.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"io.sensable.client.(scheduler.ScheduledSensableService -&gt; SensableUser)[0]\"><path d=\"M 1628.250000 564.000000 L 1628.250000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /><text x=\"1662.000000\" y=\"838.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(android.content.Context -&gt; io.sensable.client.SensableUser)[0]\"><path d=\"M 228.000000 2472.000000 L 228.000000 2611.000000 S 228.000000 2621.000000 218.000000 2621.000000 L 42.000000 2621.000000 S 32.000000 2621.000000 32.000000 2611.000000 L 32.000000 122.000000 S 32.000000 112.000000 42.000000 112.000000 L 1325.750000 112.000000 S 1335.750000 112.000000 1335.750000 122.000000 L 1335.750000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><g id=\"(android.content.SharedPreferences -&gt; io.sensable.client.SensableUser)[0]\"><path d=\"M 408.000000 2472.000000 L 408.000000 2711.000000 S 408.000000 2721.000000 398.000000 2721.000000 L 22.000000 2721.000000 S 12.000000 2721.000000 12.000000 2711.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 1433.750000 12.000000 S 1443.750000 12.000000 1443.750000 22.000000 L 1443.750000 698.000000 S 1443.750000 708.000000 1453.750000 708.000000 L 1488.250000 708.000000 S 1498.250000 708.000000 1498.250000 718.000000 L 1498.250000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><g id=\"io.sensable.(model.User -&gt; client.SensableUser)[0]\"><path d=\"M 1900.713989 1671.000000 L 1900.713989 1805.000000 S 1900.713989 1815.000000 1910.713989 1815.000000 L 2171.714111 1815.000000 S 2181.714111 1815.000000 2181.714111 1805.000000 L 2181.714111 362.000000 S 2181.714111 352.000000 2171.714111 352.000000 L 1985.750000 352.000000 S 1975.750000 352.000000 1975.750000 362.000000 L 1975.750000 748.000000 S 1975.750000 758.000000 1965.750000 758.000000 L 1768.250000 758.000000 S 1758.250000 758.000000 1758.250000 768.000000 L 1758.250000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><g id=\"io.sensable.(model.UserLogin -&gt; client.SensableUser)[0]\"><path d=\"M 2026.713989 1671.000000 L 2026.713989 1755.000000 S 2026.713989 1765.000000 2036.713989 1765.000000 L 2181.714111 1765.000000 S 2191.714111 1765.000000 2191.714111 1755.000000 L 2191.714111 312.000000 S 2191.714111 302.000000 2181.714111 302.000000 L 1974.750000 302.000000 S 1964.750000 302.000000 1964.750000 312.000000 L 1964.750000 698.000000 S 1964.750000 708.000000 1954.750000 708.000000 L 1703.250000 708.000000 S 1693.250000 708.000000 1693.250000 718.000000 L 1693.250000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><g id=\"(retrofit.RetrofitError -&gt; io.sensable.client.SensableUser)[0]\"><path d=\"M 1272.500000 2472.000000 L 1272.500000 2611.000000 S 1272.500000 2621.000000 1282.500000 2621.000000 L 2439.000000 2621.000000 S 2449.000000 2621.000000 2449.000000 2611.000000 L 2449.000000 122.000000 S 2449.000000 112.000000 2439.000000 112.000000 L 1518.750000 112.000000 S 1508.750000 112.000000 1508.750000 122.000000 L 1508.750000 648.000000 S 1508.750000 658.000000 1518.750000 658.000000 L 1553.250000 658.000000 S 1563.250000 658.000000 1563.250000 668.000000 L 1563.250000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><g id=\"(retrofit.client.Response -&gt; io.sensable.client.SensableUser)[0]\"><path d=\"M 1487.500000 2472.000000 L 1487.500000 2661.000000 S 1487.500000 2671.000000 1477.500000 2671.000000 L 32.000000 2671.000000 S 22.000000 2671.000000 22.000000 2661.000000 L 22.000000 72.000000 S 22.000000 62.000000 32.000000 62.000000 L 1368.750000 62.000000 S 1378.750000 62.000000 1378.750000 72.000000 L 1378.750000 845.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-3699360183)\" /></g><mask id=\"d2-3699360183\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"2439\" height=\"2711\">\n<rect x=\"11\" y=\"11\" width=\"2439\" height=\"2711\" fill=\"white\"></rect>\n<rect x=\"1712.500000\" y=\"162.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"394.000000\" y=\"2305.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1196.000000\" y=\"2305.000000\" width=\"82\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2013.500000\" y=\"2305.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1678.500000\" y=\"217.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"303.000000\" y=\"2360.000000\" width=\"78\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"652.500000\" y=\"2360.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"898.500000\" y=\"2377.500000\" width=\"78\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1041.500000\" y=\"2377.500000\" width=\"104\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1210.500000\" y=\"2427.500000\" width=\"124\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1460.000000\" y=\"2360.000000\" width=\"55\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2022.000000\" y=\"2360.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1616.500000\" y=\"402.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"194.500000\" y=\"2427.500000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"326.500000\" y=\"2427.500000\" width=\"163\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"654.500000\" y=\"2427.500000\" width=\"29\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1622.500000\" y=\"1576.500000\" width=\"144\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1948.500000\" y=\"1559.000000\" width=\"53\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1449.500000\" y=\"2427.500000\" width=\"76\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1790.500000\" y=\"2427.500000\" width=\"125\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1980.500000\" y=\"2427.500000\" width=\"125\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2170.500000\" y=\"2427.500000\" width=\"116\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1505.500000\" y=\"870.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1881.500000\" y=\"1626.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1983.500000\" y=\"1626.500000\" width=\"85\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1703.000000\" y=\"452.000000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1621.500000\" y=\"519.500000\" width=\"230\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.SensableUser -> android.content.Context: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> android.content.SharedPreferences: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> android.util.Log: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> io.sensable.SensableService: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> io.sensable.model.User: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> io.sensable.model.UserLogin: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> retrofit.Callback: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> retrofit.RestAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> retrofit.RetrofitError: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> retrofit.client.Response: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> java.net.CookieHandler: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> java.net.CookieManager: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensableUser -> java.net.CookiePolicy: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.scheduler.ScheduledSensableService -> io.sensable.client.SensableUser: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.content.Context -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nandroid.content.SharedPreferences -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nio.sensable.model.User -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nio.sensable.model.UserLogin -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nretrofit.RetrofitError -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\nretrofit.client.Response -> io.sensable.client.SensableUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\njava.net.CookieHandler: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nretrofit.RestAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nretrofit.RetrofitError: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.net.CookieManager: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nretrofit.Callback: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.content.SharedPreferences: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.net.CookiePolicy: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.util.Log: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nretrofit.client.Response: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.scheduler.ScheduledSensableService: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.content.SharedPreferences: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.model.User: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.SensableService: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nretrofit.RetrofitError: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.SensableUser: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nretrofit.client.Response: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.model.UserLogin: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.SensableUser: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "782aaf89-8bef-17af-dc4e-e885a06423b8",
            "ancestors": [],
            "description": "Is responsible for handling user authentication and settings retrieval in an Android application. It provides functionality to login, logout, retrieve user settings, save user information to preferences, and delete saved user information. The class utilizes Retrofit library for making HTTP requests and managing user data.",
            "name": "SensableUser",
            "location": {
              "start": 27,
              "insert": 21,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 20,
                "end": 26
              }
            },
            "item_type": "class",
            "length": 279,
            "docLength": 6
          },
          {
            "id": "7de6000f-f0f1-de9f-e845-5489ca755f09",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8"
            ],
            "description": "Retrieves username, email, and access token from shared preferences and sets them on a user object. If any of these values are missing, it returns `false`, otherwise, it returns `true`.",
            "params": [],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating user login status.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "readUserFromPreferences();\nif(loggedIn) {\n    // User is logged in, perform actions accordingly\n} else {\n    // User is not logged in, prompt for login\n}\n",
              "description": ""
            },
            "name": "readUserFromPreferences",
            "location": {
              "start": 65,
              "insert": 59,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 58,
                "end": 64
              }
            },
            "item_type": "method",
            "length": 21,
            "docLength": 6
          },
          {
            "id": "198d0568-86ef-00a3-4b4d-7c64a23add68",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8"
            ],
            "description": "Initiates a login process using an authentication service and notifies a callback interface when completed. It sets user preferences, updates the login status, and persists user data if successful, or logs an error message if not.",
            "params": [
              {
                "name": "userLogin",
                "type_name": "UserLogin",
                "description": "user's login credentials to be sent to the authentication service for processing and verification.\n\n- The object `UserLogin` has a username and a password as its main properties.",
                "complex_type": true
              },
              {
                "name": "cb",
                "type_name": "MainActivity.CallbackInterface",
                "description": "CallbackInterface of the MainActivity, which is notified about the login status update using the `loginStatusUpdate(loggedIn)` method.\n\n- `CallbackInterface`: This is an interface with a single method `loginStatusUpdate(loggedIn)`.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "UserLogin userLogin = new UserLogin(\"username\", \"password\");\nSensibleUser sensableUser = new SensibleUser(sharedPreferences, context);\nsensableUser.login(userLogin, new CallbackInterface() {\n    @Override\n    public void loginStatusUpdate(boolean loggedIn) {\n        // Update the UI accordingly based on the login status\n    }\n\n    @Override\n    public void failure(RetrofitError retrofitError) {\n        // Handle the error and update the UI accordingly\n    }\n});\n",
              "description": ""
            },
            "name": "login",
            "location": {
              "start": 122,
              "insert": 87,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 86,
                "end": 121
              }
            },
            "item_type": "method",
            "length": 78,
            "docLength": 35
          },
          {
            "id": "0d790827-ae39-6cb3-b242-87a2c8e501be",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8",
              "198d0568-86ef-00a3-4b4d-7c64a23add68"
            ],
            "description": "Updates a local user object with username and email from a response, sets login status to true, retrieves an access token if present, saves it to preferences or proceeds to settings otherwise, and notifies a callback about the login status update.",
            "params": [
              {
                "name": "user",
                "type_name": "User",
                "description": "authenticated user, providing access to their username, email, and access token, which are then used to update the local user object and preferences.\n\nDecompose user into: \nusername and email.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "Response",
                "description": "callback response from the login request, which is not utilized within the provided method implementation.\n\nGetContent: The content returned by the request; getRawBody: Returns an input stream for reading the raw response body.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "User user = new User(\"test\", \"test@example.com\");\nResponse response = null;\n\nsensableUser.login(new UserLogin(user), new CallbackInterface() {\n    @Override\n    public void loginStatusUpdate(boolean loggedIn) {\n\n    }\n\n    @Override\n    public void failure(RetrofitError retrofitError) {\n\n    }\n});\n\nsensableUser.success(user, response);\n",
              "description": ""
            },
            "name": "success",
            "location": {
              "start": 161,
              "insert": 125,
              "offset": " ",
              "indent": 12,
              "comment": {
                "start": 124,
                "end": 160
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 36
          },
          {
            "id": "a8ad7c7c-79c1-4e8e-3444-cdfd33ef1663",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8",
              "198d0568-86ef-00a3-4b4d-7c64a23add68"
            ],
            "description": "Handles failures when making a request using Retrofit. It logs an error message to the console with the provided Retrofit error, indicating that the login attempt has failed. The error details are included in the log output.",
            "params": [
              {
                "name": "retrofitError",
                "type_name": "RetrofitError",
                "description": "error that occurred during the execution of the Retrofit API request.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "RetrofitError retrofitError = new RetrofitError(\"Error message\");\nfailure(retrofitError);\n",
              "description": "\nThis example will log the error message in the console when a login callback fails."
            },
            "name": "failure",
            "location": {
              "start": 194,
              "insert": 184,
              "offset": " ",
              "indent": 12,
              "comment": {
                "start": 183,
                "end": 193
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 10
          },
          {
            "id": "c2cf0776-dc1c-1eb2-af4f-a88ac0623de2",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8"
            ],
            "description": "Retrieves user settings from a service and updates a local user object with the received information. It saves the updated user details to preferences if an access token is provided, indicating successful login. It also handles error cases by logging error messages to the console.",
            "params": [],
            "usage": {
              "language": "java",
              "code": "SensibleUser sensibleUser = new SensibleUser(sharedPreferences, context);\nsensibleUser.userSettings();\n",
              "description": "\nIn this example, the `userSettings` method of the `SensableUser` class is called with no arguments. This method makes an API call to retrieve user settings and then saves them to preferences if an access token is provided."
            },
            "name": "userSettings",
            "location": {
              "start": 205,
              "insert": 201,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 200,
                "end": 204
              }
            },
            "item_type": "method",
            "length": 63,
            "docLength": 4
          },
          {
            "id": "9507e498-ae91-38af-664c-dcf7329700ce",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8",
              "c2cf0776-dc1c-1eb2-af4f-a88ac0623de2"
            ],
            "description": "Updates local user information with data from a successful login response, sets the `loggedIn` flag to `true`, and saves the user's access token if present. It also logs various success messages using `Log.d`. The updated user details are then saved to preferences.",
            "params": [
              {
                "name": "user",
                "type_name": "User",
                "description": "authenticated user, providing access to their username, email, and access token, which are then used to update local user data and preferences.\n\nUser has username, email and access token.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "Response",
                "description": "result of an API request and is ignored in this method, as it is not utilized for any operations.\n\n* The response object has no further decomposition.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "User user = new User();\nuser.setUsername(\"exampleUser\");\nuser.setEmail(\"exampleEmail\");\n\nservice.login(new UserLogin(user.getUsername(), user.getEmail()), new Callback<User>() {\n    @Override\n    public void success(User user, Response response) {\n        // usage of the success method provided in the prompt\n    }\n\n    @Override\n    public void failure(RetrofitError retrofitError) {\n        Log.e(TAG, \"Login callback failure\" + retrofitError.toString());\n    }\n});\n",
              "description": ""
            },
            "name": "success",
            "location": {
              "start": 230,
              "insert": 208,
              "offset": " ",
              "indent": 12,
              "comment": {
                "start": 207,
                "end": 229
              }
            },
            "item_type": "method",
            "length": 18,
            "docLength": 22
          },
          {
            "id": "1c74f2a2-c12d-c1a3-894c-db131dfb305c",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8",
              "c2cf0776-dc1c-1eb2-af4f-a88ac0623de2"
            ],
            "description": "Logs an error message with a Retrofit error and the tag `TAG`. It is called when a login request fails. The error message includes information about the Retrofit error, which can be used for debugging purposes.",
            "params": [
              {
                "name": "retrofitError",
                "type_name": "RetrofitError",
                "description": "exception that occurred during the Retrofit call execution and is passed to the `failure` method for logging or further error handling purposes.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\npublic void onFailure(RetrofitError retrofitError) {\n    Log.e(TAG, \"Login callback failure\" + retrofitError.toString());\n}\n",
              "description": "\nExample input: `RetrofitError` object."
            },
            "name": "failure",
            "location": {
              "start": 262,
              "insert": 249,
              "offset": " ",
              "indent": 12,
              "comment": {
                "start": 248,
                "end": 261
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 13
          },
          {
            "id": "82bca259-8473-45ab-5343-f94f23db86e7",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8"
            ],
            "description": "Logs user information to the debug log and saves it to shared preferences, specifically storing username, email, and access token.",
            "params": [],
            "usage": {
              "language": "java",
              "code": "saveUserToPreferences();\n",
              "description": ""
            },
            "name": "saveUserToPreferences",
            "location": {
              "start": 273,
              "insert": 269,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 268,
                "end": 272
              }
            },
            "item_type": "method",
            "length": 8,
            "docLength": 4
          },
          {
            "id": "f07e3fcf-3998-8cb1-2a4f-b3914bb40edc",
            "ancestors": [
              "782aaf89-8bef-17af-dc4e-e885a06423b8"
            ],
            "description": "Removes stored user data from SharedPreferences, resets `mUser`, `loggedIn`, and `hasAccessToken` variables to default values, and notifies the callback interface about the updated login status by calling `loginStatusUpdate(loggedIn)`.",
            "params": [
              {
                "name": "cb",
                "type_name": "MainActivity.CallbackInterface",
                "description": "CallbackInterface, which is used to update the login status with the callback method `loginStatusUpdate(loggedIn)`.\n\nCb is an instance of `MainActivity.CallbackInterface`. It has a method named `loginStatusUpdate` with one argument of boolean type.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "deleteSavedUser(new CallbackInterface() {\n    @Override\n    public void loginStatusUpdate(boolean loggedIn) {\n        // Update the UI according to the login status.\n    }\n});\n",
              "description": "\nThis method will remove saved user information from SharedPreferences and update the login status, access token, and user data to empty values."
            },
            "name": "deleteSavedUser",
            "location": {
              "start": 293,
              "insert": 282,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 281,
                "end": 292
              }
            },
            "item_type": "method",
            "length": 11,
            "docLength": 11
          }
        ]
      }
    }
  },
  {
    "name": "SensorListActivity.java",
    "path": "client/src/main/java/io/sensable/client/SensorListActivity.java",
    "content": {
      "structured": {
        "description": "An Android ListActivity that displays a list of available sensors on the device. It uses the SensorManager API and a custom ArrayAdapter to populate the list with sensor names. The code retrieves a list of all available sensors using the getSensorList method, then iterates over the list to extract the sensor names, which are stored in an ArrayList.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_1 {\n        label=\"java\"\n        color=\"#33363A\"\n        List [label=\"java.util.List\", style=\"rounded,filled\"]\n        ArrayList [label=\"java.util.ArrayList\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_2 {\n        label=\"android\"\n        color=\"#33363A\"\n        Sensor [label=\"android.hardware.Sensor\", style=\"rounded,filled\"]\n        ArrayAdapter [label=\"android.widget.ArrayAdapter\", style=\"rounded,filled\"]\n        ListActivity [label=\"android.app.ListActivity\", style=\"rounded,filled\"]\n        SensorManager [label=\"android.hardware.SensorManager\", style=\"rounded,filled\"]\n        Bundle [label=\"android.os.Bundle\", style=\"rounded,filled\"]\n        Context [label=\"android.content.Context\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_4 {\n        label=\"io/sensable\"\n        color=\"#33363A\"\n        subgraph cluster_main {\n            // style=filled\n            color=\"#00000000\"\n            SensorListActivity [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n            label = \"\"\n        }\n    }\n    SensorListActivity -> Bundle [style=\"dashed\"]\n    SensorListActivity -> SensorManager [style=\"dashed\"]\n    SensorListActivity -> ArrayAdapter [style=\"dashed\"]\n    SensorListActivity -> ListActivity [style=\"dashed\"]\n    SensorListActivity -> ArrayList [style=\"dashed\"]\n    SensorListActivity -> Context [style=\"dashed\"]\n    Bundle -> SensorListActivity [penwidth=1]\n    SensorListActivity -> List [style=\"dashed\"]\n    SensorListActivity -> Sensor [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 2000 1044\"><svg id=\"d2-svg\" class=\"d2-1976898442\" width=\"2000\" height=\"1044\" viewBox=\"11 11 2000 1044\"><rect x=\"11.000000\" y=\"11.000000\" width=\"2000.000000\" height=\"1044.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-1976898442 .text {\n\tfont-family: \"d2-1976898442-font-regular\";\n}\n@font-face {\n\tfont-family: d2-1976898442-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1976898442 .text-italic {\n\tfont-family: \"d2-1976898442-font-italic\";\n}\n@font-face {\n\tfont-family: d2-1976898442-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1976898442 .text-mono {\n\tfont-family: \"d2-1976898442-font-mono\";\n}\n@font-face {\n\tfont-family: d2-1976898442-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,d09GRgABAAAAABHYAAoAAAAAHngAAgm6AAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAAGAAAABgld/X+GNtYXAAAAFUAAAAfAAAAJYCKAMRZ2x5ZgAAAdAAAAgFAAAKpH4sU0poZWFkAAAJ2AAAADYAAAA2GanOOmhoZWEAAAoQAAAAJAAAACQGMwCnaG10eAAACjQAAABmAAAAgEsACdNsb2NhAAAKnAAAAEIAAABCL6otOG1heHAAAArgAAAAIAAAACAAVAJhbmFtZQAACwAAAAa4AAAQztydAx9wb3N0AAARuAAAACAAAAAg/7gAMwADAlgBkAAFAAACigJYAAAASwKKAlgAAAFeADIBIwAAAgsFCQMEAwICBCAAAvcCADgDAAAAAAAAAABBREJPAEAAIP//Au7/BgAAA9gBEWAAAZ8AAAAAAeYClAAAACAAA3icVMw5rgEBGADgb97Me88yGPt6GdFSzQkUIhGF6FzBNSwX0Cjd7JfofAf4kEglyGXOKBRSLKyUNnYOThGYWyqtbe0dI+IVz3jEPW5xjcvn+Jb4kcr8+vOvoqqmLtfQ1FJo6+jq6RsYGhmbmJrxBgAA//8BAAD//xQHFy14nIxWXUxb5/3+ve8xPhAM5mAfGxtj+/jFx8YfGHx8zjFgjL+wcWK+DA6EYJIUGij90z8ha7JM6ZZ2a6buS6iqtF5E06T1rspFNU1bu7toF1RqJ23SKlVapCmV3KibVs1jlaYFezrHJoTtZhfwWu/x+f1+z/M+z+MXWiAOgK34LaCgDXTQDSyAwHCMm/N4CE3LHrMgy8SBmTj6Y20foXxEI7185867muHUn1NXvoXfOvq/0e9sbs5VHr+/dvPmDyvot4DBCYCjeB/agAEw0IKH5z1Eq6UMgoF4CP3Y8RsHw+k1Xc5PH649XI7/dQL9/8aGvDMyslNbwftHuwcHAAAUrANggvehCyzgUuYSwiYTa9TSrLoQSghLYoQnhDn+sP5B+vmR6NjU3Bsv3biwmJ8ulLcXyxfPb+N9Z3Z0eFavaZ/JXLmEbkuyGDh6MpYeFwEQJOuH2IfvQR9Ai4vnxYgkCWGTmeZ54tJqWaPJJIQl2azVokvzrxYKr5fGVm0hS2pgohyJlCeCU46QZ103//aL228Xh5xiL5e8USzeSvFECIZBqX8XAPfhfWhRMTAce7eIJvH+0S9zoD6fAsBdeB961ecGsyAbBIYwEUmSCU0RykPsmGWmrq46NY7y1bkWGlPutdgqjyltC96vPd7eRj1Hu2jKuVSy3anVEL5jKy05a79Saqfrh9iC70FQxeaRVSxihOc9nkF8GqkC1Gy2Y9ao1aLhqW8Ewu71aOacQ3StccmAfGUivtUfcM4II1ki2VYHkp7olk4MjLqDo4PEZ+sc6PClhsKzwWC/1MdFAg6vVeftCiaHI6UwYJivH2IKVcEGHgBzk2V5EBOXlvaoU7AMUVTiCUuy2IlZo+mr4Llg7t4ryBINhS64nO7riY0raZrybtgHFga2bg4ndVzcL+cDZzjZ5WajPYM7F2ufpByhFO+608oNOwfcgKFcP8Q2fABG4BoMEJowAksLjZ5GtaGiHZcqK5Qg84SiU0WK4pb8z23FN3KJxUTemedJTkccEj54sOby3r22cCM+ubkyt074qsOq8DxXP8S9qPo/aGil8PXs2dv5sWX7gD3JR0tDocVo8Jzd7V3XxfbminsxX59otYdKUXkx1G8R+70AgCFWP0T/egbHcQPBIwrHxMni025If+lrE8+PBLIOSlPM0JR9wTaV5CacvsmBgu71W7PX45x95ddH0YQjOJmvOqyhheiSYjfI1A+xFVVBCw4A5NLSHM9TJ4AU93EnWOKxtXYktcyE8zez2WvJF17GuPZq6wuFQI6z95fRe9NT587W0rHr87N7469sdlrPFBctrNTjavh7qu7EEqrCEMSg0ESlYBAjUnORhLBZYIlqdy1x8R4VnNA8Oer45FijydBMgOPvIO/2jTmDw26zEHFJGHB8+E2mJ1wSDX5jt1Ec2lm7mLq1HEomQ4Op1EjpOTl6iXV3uWzzf8ol4oOadt5hHjZoDAm/OOPXpZlIX+Sct62t3cbYbJF4cCaE3puICBMTQmSi9v2Ym/RoNIYBlg8CgjIAbscHjRw90ZliZ1VjTLnYQvFLI+eLxUjMn/HjgwfXB6SNy7XfIzKZDgRq9wGgXocVAPQT/BHmFUWBFuxDjX257mnuO072AcFZ1ecH0NXgkSGiwBhNQlg9ph9PL9yvi37/EOuK6i6cR4/SR38Qh0zjnXr13VEAPIiqirIERjCrI5tP5lbHfjr/aIrGhrAvx7KCTxgpRiycsWDutbi7USXh8i16gtP52jvofMnN136Kzvv8ynrMC6qC8Zkep2jJ0Bp++SktqLLwn6yoHsA2VAW9kpTPuOy0jZXDDyR20umdRON/tlTKZkulprtie8W5vVhmc2Fxa2txYRPUjBDUuqq3zCfTNTVHzKzh2YwoZ2jKdSH43GZ8Y8w166Q0ryVLjYjIfox/Hnf6vnuteCPO2VffQdpTGfEmALagKnQ/y0EzImjmzQxN8bvp3pDJYOnvk58PoMr1sUxbe66tdaJQ+wwQ5OqHuBNVwftfWa5ScSrJj3Ncyt0O8L6r6fg4m0ytXb66Ed3q97qKoXg4fXZ+iQtf1gUdkr0/6DDYbR3GtDw267aIZpvP5nB1MT7J7Ul5VY1M1g+xC78GPU3mRSLKssAKLFEM2YyD7+WK5I0ftGe+/FLMkqi1m8vrhJVYJd5y717682RGdyamYwDBdP0Q/RNVFC2YFa02lCrJTDPJvloqLgjjvklvMU1r3Mu6jctosPZwMu0PofmateSXAIEAgN2oAh0AHCUYTCaFTtkgUAg+XtjV93ZoOiz63dkPUaX2F3eOkJwbGWvWhldaAfAcqigOEk7elQXzSRXiUa4sNL23XRyl2zWaFn1rrDja2q3RaNvo0cLWdlSn0+h0EqrUKq4kIUnXkyeNFVlr1sdCuSw8VnslALAZVcACIMiepy1kgTaT5r2IphPvv3txuqNPr+m0deSX7n+wUtJzXRq9XT/35IsXDX6jMWB84W//2GUHWZPfvKvWHa6HsAdVwKpw2JSCLJ9iohN/u9/GnDG3C4lu/WcLNzsdek1Hr2575pNuafZ3Z5KUZizYjz6v/d15lpA8hzqOqkMFJcOU7PkRqij3FY4hIseg2CMUQT9LqwQi+AIX0Ev4I2hXfiGaymONWhSw8bzNxvO4QPr6iPLX4FvJLKVet3rex7pVKxu12gf8VF+vdcSWDz9CEffyp4bO8Y7ObBz9Il3rjK2K/wYAAP//AQAA//+XgS/CAAAAAAEAAAACCbqKz6xPXw889QADA+gAAAAA3B0N9wAAAADcHHNL/z/+OgMZBCQAAAADAAIAAAAAAAAAAQAAA9j+7wAAAlj/P/8/AxkAAQAAAAAAAAAAAAAAAAAAACB4nCzLQcqBcQAG8WlW3zG+K8hC6U2ESCl2k7JyFwdwTKfQW//VU/P0MzbGv/EydsbbOBt74248jZsxGYfxze1hrIyLsR5tGvsxTsbRuBpL48/YGothv7P/AQAA//8BAAD//zX+FRQAAAAAACoATgCCALIAwgDwATQBcAGkAdQCCAI+AqgCzALYAuQDAgM0A1YDggO2A9YEFAQ6BFwEegSwBNwFCgUaBTIFUgAAAAEAAAAgAfgAKgBlAAYAAQAAAAAAAAAAAAAAAAADAAN4nJyWS2yT2RXHf865Ab94GVQNCFVXI4SmCIydScBNIOCQAcIgQklm2gpR1STGsUjsyHZg6GIWXVZddV11M120ErQKJWomgUIgpGoFqtRFNauuuqi66KqaRVfVd77jxHESOoOQyO8+zv+e173+gItyCyHiohFIgnGEJEnjDg7xjrGQ5JSxI8lF406SjBpvI8kPjbeTYtI4ymE+NY5xmF8axznCn40TnOA/xkkGI0eMd9IbqRjv4mDkV8a76YosG+9p8TPFwciXxntXdWLASkfKOMI3O74w7mBnx5fGwmVxxq5lTyfjctV4G0fkkfF2nsnfjaN0u18Yx+h2fzVO0NW5zXiH+M6c8U66o98LOQK7oz81jrA7+nPjDg5E7xsLyeiKsSMVNf1IJ6noP4y3kYpaLEH+Y1HjKIdiB4xj+Fi/cZyjsR8YJ8jEfmKcJB1bMN5BV+yfxjvJxZs6uzgcv2a8m1PxT4z3tPic4t245Sqyt0Vz36rm/gik4n8zjpCKN+c7eDf+X2NhX+KgseNAImPcyYHEJeNtHEiMG29nX+JT4yiZxM+MY7yXeG4c52jiX8YJupPfME6SSzY1d3Iq+WPjXWSSfzDezcXkv433tPiZomvHCeO9gY7MyjNZlFd4Ci1cooznMJ5JvDyWObzMyoIsyZw8llfyRObkuXwm9+Wx/B4fuSRL8kD+JE/w8rCF51t4RT6TB7IkD+VzWZCneJeVBXkpS/K5LMqizr4y+1n5o7zGc73jC24EZ8gjeaAqoS8Lcl/mZU6WAx2uk+GGLMtLeSZP5Xdqv6J6v8HLM5mV17Ios7rz2BY7n8pzjfGFLMucLMlv5UVzlusc4Ya8kNfyWB7KU1kMTg3Olpd4eaQzs2oTzmzu46EtTr6Plzl5IrOahSDLy8159feont6SX46qp2t1a8l321pJxxvz3lIV27FaSX6Np4sMWTJ4jtmoS0d5xqlykyKeEe5Rp0GRKep4hqgwRpUa0/p/QdfG8bzHBA0aTNPLcY5zV/+lKayqpdVyiuN8K/CHu5RpMIHnGkXqFKlxx9TOU6VCA88VCkwFvvh3GKHKDDXGKPr9pFvHeM5RZVzpKjWqqlpihkkK1OgiTYb3ydFHnkEGGKZvnULTPrQ+1mYfWg0zwAd8rL7WKauXfp32BFUaGmmFO3iyupYmS5YT9DFFgdsUddctinyiHgcKPaQ5QQ8ntC5f3bP1WShrnQp4Glqfca1dsO82niq33rrCZY01qFhg9xEVrV+4NkLDdoanVxjnuNp7jXRCM+ZVeUYrW6Osu9Nv5c1VChq/Z5A0noumGvTVqGY3+Duj/Rb4XaTyNfqzwT2mKTLKhOVzrR9HNIcN7mpO1zI+SVkrUNFODnIyo1kI425mbYQhLuMZVv3KOuXL6xSCSNr7LKt9lNbYJjY9d63+dyhQ1g65yaSurN23gp6b5zvKDXrxbdmpM6YVmqahNaqrVlprUOI4w5zncpsn/z9H4/o3rP1NZla7J4wu6JrglucZ0cqP+P14BnQ8xIhm5LsMMcpFhvmIUR3nucY18lxhlCE+UNthrul7MMwVBtViSDlcO6834Arfx/MhQ7on0C5afsKKBTdzWr2vq+9hL5eZYlpzHnie1liLGuHXr7Dnlqk2betqM0aZW7rTa/0qetcLlKwrptXDKc1lszfWbl3YEVMaS1DbtfUSVX1fa3pzA1XPPXs7gm4NfQpfiMZXqGr6rXqmvprDovq8flyy34Gyvo3hq9P8RhnRX4Ky/n6NqdeBbRBR8HvZPjO/YWZFa1XjJuWw12SFc9zT0ybtHnluamxqEX6ZUNcq1LVGgUc/UpVq85vEXosqJX2fpjVzY3qj7uko7AL9Ktlyb8FevZpm/Xbze2TD2cFbNWnvvtfYSqZ+iBsUmDSVir2Ungoz+vtZ09XwrmlsZN/oT7tSvfVLZUMVj+rb3l6T9tputku/Ztor47Lrqr2Z3Yo74866fpd3A67ffRvvMu0zlNzHeJfDu7/gXR7vTrqMy7sed8H1uow75XIu7zJKedfrcoFV5JJyv2qd0R2n3YfBijzccmV+y5UVPe+sy66d4LJKZ13O9bk+l3MXXI+uZtww3vW6sy7jBoJxswfV7wuq0+tOu3NuIFR3p12/63OXm73oBlzOnXH97n3VGGw5s9v1uMHAs2Yvbro39OCk63I97qTrdv1hppr9uKUfJ91pl3G9ek6/RpUJVJuduYVfPVaRUxp/sGfA9QQZae21jXUO+uGNNdqQb7XY0B1v1JnfrDPeaLHyPwAAAP//AQAA//+blbgHAAMAAAAAAAD/tQAyAAAAAQAAAAAAAAAAAAAAAAAAAAA=\");\n}\n.d2-1976898442 .text-mono-bold {\n\tfont-family: \"d2-1976898442-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-1976898442-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-1976898442 .fill-N1{fill:#ECEDED;}\n\t\t.d2-1976898442 .fill-N2{fill:#676C7E;}\n\t\t.d2-1976898442 .fill-N3{fill:#9499AB;}\n\t\t.d2-1976898442 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-1976898442 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-1976898442 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-1976898442 .fill-N7{fill:#151719;}\n\t\t.d2-1976898442 .fill-B1{fill:#717D86;}\n\t\t.d2-1976898442 .fill-B2{fill:#717D86;}\n\t\t.d2-1976898442 .fill-B3{fill:#ffff00;}\n\t\t.d2-1976898442 .fill-B4{fill:#151719;}\n\t\t.d2-1976898442 .fill-B5{fill:#151719;}\n\t\t.d2-1976898442 .fill-B6{fill:#151719;}\n\t\t.d2-1976898442 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-1976898442 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-1976898442 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-1976898442 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-1976898442 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-1976898442 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-1976898442 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-1976898442 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-1976898442 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-1976898442 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-1976898442 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-1976898442 .stroke-N7{stroke:#151719;}\n\t\t.d2-1976898442 .stroke-B1{stroke:#717D86;}\n\t\t.d2-1976898442 .stroke-B2{stroke:#717D86;}\n\t\t.d2-1976898442 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-1976898442 .stroke-B4{stroke:#151719;}\n\t\t.d2-1976898442 .stroke-B5{stroke:#151719;}\n\t\t.d2-1976898442 .stroke-B6{stroke:#151719;}\n\t\t.d2-1976898442 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-1976898442 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-1976898442 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-1976898442 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-1976898442 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-1976898442 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-1976898442 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-1976898442 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-1976898442 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-1976898442 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-1976898442 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-1976898442 .background-color-N7{background-color:#151719;}\n\t\t.d2-1976898442 .background-color-B1{background-color:#717D86;}\n\t\t.d2-1976898442 .background-color-B2{background-color:#717D86;}\n\t\t.d2-1976898442 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-1976898442 .background-color-B4{background-color:#151719;}\n\t\t.d2-1976898442 .background-color-B5{background-color:#151719;}\n\t\t.d2-1976898442 .background-color-B6{background-color:#151719;}\n\t\t.d2-1976898442 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-1976898442 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-1976898442 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-1976898442 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-1976898442 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-1976898442 .color-N1{color:#ECEDED;}\n\t\t.d2-1976898442 .color-N2{color:#676C7E;}\n\t\t.d2-1976898442 .color-N3{color:#9499AB;}\n\t\t.d2-1976898442 .color-N4{color:#CFD2DD;}\n\t\t.d2-1976898442 .color-N5{color:#DEE1EB;}\n\t\t.d2-1976898442 .color-N6{color:#EEF1F8;}\n\t\t.d2-1976898442 .color-N7{color:#151719;}\n\t\t.d2-1976898442 .color-B1{color:#717D86;}\n\t\t.d2-1976898442 .color-B2{color:#717D86;}\n\t\t.d2-1976898442 .color-B3{color:#ffff00;}\n\t\t.d2-1976898442 .color-B4{color:#151719;}\n\t\t.d2-1976898442 .color-B5{color:#151719;}\n\t\t.d2-1976898442 .color-B6{color:#151719;}\n\t\t.d2-1976898442 .color-AA2{color:#ECEDED;}\n\t\t.d2-1976898442 .color-AA4{color:#CFD2DD;}\n\t\t.d2-1976898442 .color-AA5{color:#DEE1EB;}\n\t\t.d2-1976898442 .color-AB4{color:#CFD2DD;}\n\t\t.d2-1976898442 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"io\"><g class=\"shape\" ><rect x=\"1013.000000\" y=\"57.000000\" width=\"620.000000\" height=\"386.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1323.000000\" y=\"90.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">io</text></g><g id=\"android\"><g class=\"shape\" ><rect x=\"52.000000\" y=\"733.000000\" width=\"1505.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"804.500000\" y=\"766.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">android</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"1577.000000\" y=\"733.000000\" width=\"433.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1793.500000\" y=\"766.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"io.sensable\"><g class=\"shape\" ><rect x=\"1063.000000\" y=\"112.000000\" width=\"520.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1323.000000\" y=\"141.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">sensable</text></g><g id=\"android.app\"><g class=\"shape\" ><rect x=\"102.000000\" y=\"788.000000\" width=\"260.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"232.000000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">app</text></g><g id=\"android.content\"><g class=\"shape\" ><rect x=\"382.000000\" y=\"788.000000\" width=\"212.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"488.000000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">content</text></g><g id=\"android.hardware\"><g class=\"shape\" ><rect x=\"614.000000\" y=\"788.000000\" width=\"392.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"810.000000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">hardware</text></g><g id=\"android.os\"><g class=\"shape\" ><rect x=\"1026.000000\" y=\"788.000000\" width=\"201.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1126.500000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">os</text></g><g id=\"android.widget\"><g class=\"shape\" ><rect x=\"1247.000000\" y=\"788.000000\" width=\"260.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1377.000000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">widget</text></g><g id=\"java.util\"><g class=\"shape\" ><rect x=\"1627.000000\" y=\"788.000000\" width=\"333.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1793.500000\" y=\"817.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"io.sensable.client\"><g class=\"shape\" ><rect x=\"1113.000000\" y=\"167.000000\" width=\"420.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1323.000000\" y=\"192.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">client</text></g><g id=\"android.app.ListActivity\"><g class=\"shape\" ><rect x=\"152.000000\" y=\"838.000000\" width=\"160.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"232.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ListActivity</text></g><g id=\"android.content.Context\"><g class=\"shape\" ><rect x=\"432.000000\" y=\"838.000000\" width=\"112.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"488.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Context</text></g><g id=\"android.hardware.Sensor\"><g class=\"shape\" ><rect x=\"664.000000\" y=\"838.000000\" width=\"102.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"715.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Sensor</text></g><g id=\"android.hardware.SensorManager\"><g class=\"shape\" ><rect x=\"786.000000\" y=\"838.000000\" width=\"170.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"871.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SensorManager</text></g><g id=\"android.os.Bundle\"><g class=\"shape\" ><rect x=\"1076.000000\" y=\"838.000000\" width=\"101.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1126.500000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Bundle</text></g><g id=\"android.widget.ArrayAdapter\"><g class=\"shape\" ><rect x=\"1297.000000\" y=\"838.000000\" width=\"160.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1377.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ArrayAdapter</text></g><g id=\"java.util.ArrayList\"><g class=\"shape\" ><rect x=\"1677.000000\" y=\"838.000000\" width=\"131.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1742.500000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ArrayList</text></g><g id=\"java.util.List\"><g class=\"shape\" ><rect x=\"1828.000000\" y=\"838.000000\" width=\"82.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1869.000000\" y=\"876.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">List</text></g><g id=\"io.sensable.client.SensorListActivity\"><g class=\"shape\" ><rect x=\"1163.000000\" y=\"217.000000\" width=\"320.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1323.000000\" y=\"255.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">SensorListActivity</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.app.ListActivity)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 1199.222046 284.000000 L 1199.222046 478.000000 S 1199.222046 488.000000 1189.222046 488.000000 L 242.000000 488.000000 S 232.000000 488.000000 232.000000 498.000000 L 232.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"266.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.content.Context)[0]\"><path d=\"M 1234.776978 284.000000 L 1234.776978 528.000000 S 1234.776978 538.000000 1224.776978 538.000000 L 498.000000 538.000000 S 488.000000 538.000000 488.000000 548.000000 L 488.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"522.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.hardware.Sensor)[0]\"><path d=\"M 1270.333008 284.000000 L 1270.333008 578.000000 S 1270.333008 588.000000 1260.333008 588.000000 L 725.000000 588.000000 S 715.000000 588.000000 715.000000 598.000000 L 715.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"749.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.hardware.SensorManager)[0]\"><path d=\"M 1305.887939 284.000000 L 1305.887939 628.000000 S 1305.887939 638.000000 1295.887939 638.000000 L 881.000000 638.000000 S 871.000000 638.000000 871.000000 648.000000 L 871.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"905.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.os.Bundle)[0]\"><path d=\"M 1341.443970 284.000000 L 1341.443970 678.000000 S 1341.443970 688.000000 1331.443970 688.000000 L 1136.500000 688.000000 S 1126.500000 688.000000 1126.500000 698.000000 L 1126.500000 835.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"1161.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; android.widget.ArrayAdapter)[0]\"><path d=\"M 1377.000000 284.000000 L 1377.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"1411.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; java.util.ArrayList)[0]\"><path d=\"M 1412.555054 284.000000 L 1412.555054 528.000000 S 1412.555054 538.000000 1422.555054 538.000000 L 1732.500000 538.000000 S 1742.500000 538.000000 1742.500000 548.000000 L 1742.500000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"1777.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(io.sensable.client.SensorListActivity -&gt; java.util.List)[0]\"><path d=\"M 1448.110962 284.000000 L 1448.110962 478.000000 S 1448.110962 488.000000 1458.110962 488.000000 L 1859.000000 488.000000 S 1869.000000 488.000000 1869.000000 498.000000 L 1869.000000 834.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /><text x=\"1903.000000\" y=\"828.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(android.os.Bundle -&gt; io.sensable.client.SensorListActivity)[0]\"><path d=\"M 1126.500000 905.000000 L 1126.500000 1044.000000 S 1126.500000 1054.000000 1116.500000 1054.000000 L 22.000000 1054.000000 S 12.000000 1054.000000 12.000000 1044.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 1313.666016 12.000000 S 1323.666016 12.000000 1323.666016 22.000000 L 1323.666016 214.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1976898442)\" /></g><mask id=\"d2-1976898442\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"2000\" height=\"1044\">\n<rect x=\"11\" y=\"11\" width=\"2000\" height=\"1044\" fill=\"white\"></rect>\n<rect x=\"1313.000000\" y=\"62.000000\" width=\"20\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"759.500000\" y=\"738.000000\" width=\"90\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1768.500000\" y=\"738.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1279.000000\" y=\"117.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"213.000000\" y=\"793.000000\" width=\"38\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"449.000000\" y=\"793.000000\" width=\"78\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"762.500000\" y=\"793.000000\" width=\"95\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1115.000000\" y=\"793.000000\" width=\"23\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1342.500000\" y=\"793.000000\" width=\"69\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1777.000000\" y=\"793.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1299.500000\" y=\"172.000000\" width=\"47\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"174.500000\" y=\"860.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"454.500000\" y=\"860.500000\" width=\"67\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"686.500000\" y=\"860.500000\" width=\"57\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"808.500000\" y=\"860.500000\" width=\"125\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1098.500000\" y=\"860.500000\" width=\"56\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1319.500000\" y=\"860.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1699.500000\" y=\"860.500000\" width=\"86\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1850.500000\" y=\"860.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1236.000000\" y=\"239.500000\" width=\"174\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\nio.sensable.client.SensorListActivity -> android.app.ListActivity: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> android.content.Context: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> android.hardware.Sensor: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> android.hardware.SensorManager: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> android.os.Bundle: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> android.widget.ArrayAdapter: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> java.util.ArrayList: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nio.sensable.client.SensorListActivity -> java.util.List: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\nandroid.os.Bundle -> io.sensable.client.SensorListActivity: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\njava.util.List: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.ArrayList: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.widget.ArrayAdapter: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.hardware.Sensor: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.os.Bundle: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.content.Context: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.hardware.SensorManager: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nandroid.app.ListActivity: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nio.sensable.client.SensorListActivity: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nandroid.os.Bundle: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\nio.sensable.client.SensorListActivity: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "4669f1a4-51f7-70a7-fd4e-9d873c0c00db",
            "ancestors": [],
            "description": "Extends ListActivity to display a list of available sensors on a device. It retrieves a list of all sensors using the SensorManager and then creates an ArrayAdapter to display their names in a ListView.",
            "name": "SensorListActivity",
            "location": {
              "start": 13,
              "insert": 13,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 44,
            "docLength": null
          },
          {
            "id": "2b5586d6-1dd3-2781-9d4f-7ff01c93b3de",
            "ancestors": [
              "4669f1a4-51f7-70a7-fd4e-9d873c0c00db"
            ],
            "description": "Initializes a SensorManager and retrieves a list of all available sensors. It then creates an ArrayList to store sensor names, adds these names to the list, and sets a list adapter for a ListView. The adapter enables text filtering on the ListView.",
            "params": [
              {
                "name": "savedInstanceState",
                "type_name": "Bundle",
                "description": "Bundle object that contains the activity's saved state at the moment it is being restored by the system.\n\nBundle object holding the activity's state. It contains key-value pairs representing the application-specific data saved by the activity when its process is killed.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "public class Example {\n    public static void main(String[] args) {\n        Bundle savedInstanceState = new Bundle();\n        SensorListActivity sensorListActivity = new SensorListActivity();\n        sensorListActivity.onCreate(savedInstanceState);\n    }\n}\n",
              "description": "\nThis code creates a new instance of the `SensorListActivity` and calls its `onCreate` method with a sample input `savedInstanceState`."
            },
            "name": "onCreate",
            "location": {
              "start": 40,
              "insert": 17,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 16,
                "end": 39
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 23
          }
        ]
      }
    }
  }
]